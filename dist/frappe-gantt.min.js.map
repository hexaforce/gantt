{"version":3,"file":"frappe-gantt.min.js","sources":["../src/date_utils.js","../src/svg_utils.js","../src/bar.js","../src/arrow.js","../src/popup.js","../src/index.js"],"sourcesContent":["/* eslint-disable prettier/prettier */\n\nconst YEAR = 'year'\nconst MONTH = 'month'\nconst DAY = 'day'\nconst HOUR = 'hour'\nconst MINUTE = 'minute'\nconst SECOND = 'second'\nconst MILLISECOND = 'millisecond'\n\nexport default {\n  parse(date, date_separator = '-', time_separator = /[.:]/) {\n    if (date instanceof Date) {\n      return date\n    }\n    if (typeof date === 'string') {\n      let date_parts, time_parts\n      const parts = date.split(' ')\n\n      date_parts = parts[0].split(date_separator).map((val) => parseInt(val, 10))\n      time_parts = parts[1] && parts[1].split(time_separator)\n\n      // month is 0 indexed\n      date_parts[1] = date_parts[1] - 1\n\n      let vals = date_parts\n\n      if (time_parts && time_parts.length) {\n        if (time_parts.length == 4) {\n          time_parts[3] = '0.' + time_parts[3]\n          time_parts[3] = parseFloat(time_parts[3]) * 1000\n        }\n        vals = vals.concat(time_parts)\n      }\n\n      return new Date(...vals)\n    }\n  },\n\n  to_string(date, with_time = false) {\n    if (!(date instanceof Date)) {\n      throw new TypeError('Invalid argument type')\n    }\n    const vals = this.get_date_values(date).map((val, i) => {\n      if (i === 1) {\n        // add 1 for month\n        val = val + 1\n      }\n\n      if (i === 6) {\n        return padStart(val + '', 3, '0')\n      }\n\n      return padStart(val + '', 2, '0')\n    })\n    const date_string = `${vals[0]}-${vals[1]}-${vals[2]}`\n    const time_string = `${vals[3]}:${vals[4]}:${vals[5]}.${vals[6]}`\n\n    return date_string + (with_time ? ' ' + time_string : '')\n  },\n\n  format(date, format_string = 'YYYY-MM-DD HH:mm:ss.SSS', lang = 'en') {\n    const dateTimeFormat = new Intl.DateTimeFormat(lang, {\n      month: 'long',\n    })\n    const month_name = dateTimeFormat.format(date)\n    const month_name_capitalized = month_name.charAt(0).toUpperCase() + month_name.slice(1)\n\n    const values = this.get_date_values(date).map((d) => padStart(d, 2, 0))\n    const format_map = {\n      YYYY: values[0],\n      MM: padStart(+values[1] + 1, 2, 0),\n      DD: values[2],\n      HH: values[3],\n      mm: values[4],\n      ss: values[5],\n      SSS: values[6],\n      D: values[2],\n      MMMM: month_name_capitalized,\n      MMM: month_name_capitalized,\n    }\n\n    let str = format_string\n    const formatted_values = []\n\n    Object.keys(format_map)\n      .sort((a, b) => b.length - a.length) // big string first\n      .forEach((key) => {\n        if (str.includes(key)) {\n          str = str.replace(key, `$${formatted_values.length}`)\n          formatted_values.push(format_map[key])\n        }\n      })\n\n    formatted_values.forEach((value, i) => {\n      str = str.replace(`$${i}`, value)\n    })\n\n    return str\n  },\n\n  diff(date_a, date_b, scale = DAY) {\n    let milliseconds, seconds, hours, minutes, days, months, years\n\n    milliseconds = date_a - date_b\n    seconds = milliseconds / 1000\n    minutes = seconds / 60\n    hours = minutes / 60\n    days = hours / 24\n    months = days / 30\n    years = months / 12\n\n    if (!scale.endsWith('s')) {\n      scale += 's'\n    }\n\n    return Math.floor(\n      {\n        milliseconds,\n        seconds,\n        minutes,\n        hours,\n        days,\n        months,\n        years,\n      }[scale],\n    )\n  },\n\n  today() {\n    const vals = this.get_date_values(new Date()).slice(0, 3)\n    return new Date(...vals)\n  },\n\n  now() {\n    return new Date()\n  },\n\n  add(date, qty, scale) {\n    qty = parseInt(qty, 10)\n    const vals = [date.getFullYear() + (scale === YEAR ? qty : 0), date.getMonth() + (scale === MONTH ? qty : 0), date.getDate() + (scale === DAY ? qty : 0), date.getHours() + (scale === HOUR ? qty : 0), date.getMinutes() + (scale === MINUTE ? qty : 0), date.getSeconds() + (scale === SECOND ? qty : 0), date.getMilliseconds() + (scale === MILLISECOND ? qty : 0)]\n    return new Date(...vals)\n  },\n\n  start_of(date, scale) {\n    const scores = {\n      [YEAR]: 6,\n      [MONTH]: 5,\n      [DAY]: 4,\n      [HOUR]: 3,\n      [MINUTE]: 2,\n      [SECOND]: 1,\n      [MILLISECOND]: 0,\n    }\n\n    function should_reset(_scale) {\n      const max_score = scores[scale]\n      return scores[_scale] <= max_score\n    }\n\n    const vals = [date.getFullYear(), should_reset(YEAR) ? 0 : date.getMonth(), should_reset(MONTH) ? 1 : date.getDate(), should_reset(DAY) ? 0 : date.getHours(), should_reset(HOUR) ? 0 : date.getMinutes(), should_reset(MINUTE) ? 0 : date.getSeconds(), should_reset(SECOND) ? 0 : date.getMilliseconds()]\n\n    return new Date(...vals)\n  },\n\n  clone(date) {\n    return new Date(...this.get_date_values(date))\n  },\n\n  get_date_values(date) {\n    return [date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()]\n  },\n\n  get_days_in_month(date) {\n    const no_of_days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\n\n    const month = date.getMonth()\n\n    if (month !== 1) {\n      return no_of_days[month]\n    }\n\n    // Feb\n    const year = date.getFullYear()\n    if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {\n      return 29\n    }\n    return 28\n  },\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart\nfunction padStart(str, targetLength, padString) {\n  str = str + ''\n  targetLength = targetLength >> 0\n  padString = String(typeof padString !== 'undefined' ? padString : ' ')\n  if (str.length > targetLength) {\n    return String(str)\n  } else {\n    targetLength = targetLength - str.length\n    if (targetLength > padString.length) {\n      padString += padString.repeat(targetLength / padString.length)\n    }\n    return padString.slice(0, targetLength) + String(str)\n  }\n}\n","/* eslint-disable prettier/prettier */\n\nexport function $(expr, con) {\n  return typeof expr === 'string' ? (con || document).querySelector(expr) : expr || null\n}\n\nexport function createSVG(tag, attrs) {\n  const elem = document.createElementNS('http://www.w3.org/2000/svg', tag)\n  for (let attr in attrs) {\n    if (attr === 'append_to') {\n      const parent = attrs.append_to\n      parent.appendChild(elem)\n    } else if (attr === 'innerHTML') {\n      elem.innerHTML = attrs.innerHTML\n    } else {\n      elem.setAttribute(attr, attrs[attr])\n    }\n  }\n  return elem\n}\n\nexport function animateSVG(svgElement, attr, from, to) {\n  const animatedSvgElement = getAnimationElement(svgElement, attr, from, to)\n\n  if (animatedSvgElement === svgElement) {\n    // triggered 2nd time programmatically\n    // trigger artificial click event\n    const event = document.createEvent('HTMLEvents')\n    event.initEvent('click', true, true)\n    event.eventName = 'click'\n    animatedSvgElement.dispatchEvent(event)\n  }\n}\n\nfunction getAnimationElement(svgElement, attr, from, to, dur = '0.4s', begin = '0.1s') {\n  const animEl = svgElement.querySelector('animate')\n  if (animEl) {\n    $.attr(animEl, {\n      attributeName: attr,\n      from,\n      to,\n      dur,\n      begin: 'click + ' + begin, // artificial click\n    })\n    return svgElement\n  }\n\n  const animateElement = createSVG('animate', {\n    attributeName: attr,\n    from,\n    to,\n    dur,\n    begin,\n    calcMode: 'spline',\n    values: from + ';' + to,\n    keyTimes: '0; 1',\n    keySplines: cubic_bezier('ease-out'),\n  })\n  svgElement.appendChild(animateElement)\n\n  return svgElement\n}\n\nfunction cubic_bezier(name) {\n  return {\n    ease: '.25 .1 .25 1',\n    linear: '0 0 1 1',\n    'ease-in': '.42 0 1 1',\n    'ease-out': '0 0 .58 1',\n    'ease-in-out': '.42 0 .58 1',\n  }[name]\n}\n\n$.on = (element, event, selector, callback) => {\n  if (!callback) {\n    callback = selector\n    $.bind(element, event, callback)\n  } else {\n    $.delegate(element, event, selector, callback)\n  }\n}\n\n$.off = (element, event, handler) => {\n  element.removeEventListener(event, handler)\n}\n\n$.bind = (element, event, callback) => {\n  event.split(/\\s+/).forEach(function (event) {\n    element.addEventListener(event, callback)\n  })\n}\n\n$.delegate = (element, event, selector, callback) => {\n  element.addEventListener(event, function (e) {\n    const delegatedTarget = e.target.closest(selector)\n    if (delegatedTarget) {\n      e.delegatedTarget = delegatedTarget\n      callback.call(this, e, delegatedTarget)\n    }\n  })\n}\n\n$.closest = (selector, element) => {\n  if (!element) return null\n\n  if (element.matches(selector)) {\n    return element\n  }\n\n  return $.closest(selector, element.parentNode)\n}\n\n$.attr = (element, attr, value) => {\n  if (!value && typeof attr === 'string') {\n    return element.getAttribute(attr)\n  }\n\n  if (typeof attr === 'object') {\n    for (let key in attr) {\n      $.attr(element, key, attr[key])\n    }\n    return\n  }\n\n  element.setAttribute(attr, value)\n}\n","/* eslint-disable prettier/prettier */\n\nimport date_utils from './date_utils'\nimport { $, createSVG, animateSVG } from './svg_utils'\n\nexport default class Bar {\n  constructor(gantt, task) {\n    this.set_defaults(gantt, task)\n    this.prepare()\n    this.draw()\n    this.bind()\n  }\n\n  set_defaults(gantt, task) {\n    this.action_completed = false\n    this.gantt = gantt\n    this.task = task\n  }\n\n  prepare() {\n    this.prepare_values()\n    this.prepare_helpers()\n  }\n\n  prepare_values() {\n    this.invalid = this.task.invalid\n    this.height = this.gantt.options.bar_height\n    this.x = this.compute_x()\n    this.y = this.compute_y()\n    this.corner_radius = this.gantt.options.bar_corner_radius\n    this.duration = date_utils.diff(this.task._end, this.task._start, 'hour') / this.gantt.options.step\n    this.width = this.gantt.options.column_width * this.duration\n    this.progress_width = this.gantt.options.column_width * this.duration * (this.task.progress / 100) || 0\n    this.group = createSVG('g', {\n      class: 'bar-wrapper ' + (this.task.custom_class || ''),\n      'data-id': this.task.id,\n    })\n    this.bar_group = createSVG('g', {\n      class: 'bar-group',\n      append_to: this.group,\n    })\n    this.handle_group = createSVG('g', {\n      class: 'handle-group',\n      append_to: this.group,\n    })\n  }\n\n  prepare_helpers() {\n    SVGElement.prototype.getX = function () {\n      return +this.getAttribute('x')\n    }\n    SVGElement.prototype.getY = function () {\n      return +this.getAttribute('y')\n    }\n    SVGElement.prototype.getWidth = function () {\n      return +this.getAttribute('width')\n    }\n    SVGElement.prototype.getHeight = function () {\n      return +this.getAttribute('height')\n    }\n    SVGElement.prototype.getEndX = function () {\n      return this.getX() + this.getWidth()\n    }\n  }\n\n  draw() {\n    this.draw_bar()\n    this.draw_progress_bar()\n    this.draw_label()\n    this.draw_resize_handles()\n  }\n\n  draw_bar() {\n    this.$bar = createSVG('rect', {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: 'bar',\n      append_to: this.bar_group,\n    })\n\n    animateSVG(this.$bar, 'width', 0, this.width)\n\n    if (this.invalid) {\n      this.$bar.classList.add('bar-invalid')\n    }\n  }\n\n  draw_progress_bar() {\n    if (this.invalid) return\n    this.$bar_progress = createSVG('rect', {\n      x: this.x,\n      y: this.y,\n      width: this.progress_width,\n      height: this.height,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: 'bar-progress',\n      append_to: this.bar_group,\n    })\n\n    animateSVG(this.$bar_progress, 'width', 0, this.progress_width)\n  }\n\n  draw_label() {\n    createSVG('text', {\n      x: this.x + this.width / 2,\n      y: this.y + this.height / 2,\n      innerHTML: this.task.name,\n      class: 'bar-label',\n      append_to: this.bar_group,\n    })\n    // labels get BBox in the next tick\n    requestAnimationFrame(() => this.update_label_position())\n  }\n\n  draw_resize_handles() {\n    if (this.invalid) return\n\n    const bar = this.$bar\n    const handle_width = 8\n\n    createSVG('rect', {\n      x: bar.getX() + bar.getWidth() - 9,\n      y: bar.getY() + 1,\n      width: handle_width,\n      height: this.height - 2,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: 'handle right',\n      append_to: this.handle_group,\n    })\n\n    createSVG('rect', {\n      x: bar.getX() + 1,\n      y: bar.getY() + 1,\n      width: handle_width,\n      height: this.height - 2,\n      rx: this.corner_radius,\n      ry: this.corner_radius,\n      class: 'handle left',\n      append_to: this.handle_group,\n    })\n\n    if (this.task.progress && this.task.progress < 100) {\n      this.$handle_progress = createSVG('polygon', {\n        points: this.get_progress_polygon_points().join(','),\n        class: 'handle progress',\n        append_to: this.handle_group,\n      })\n    }\n  }\n\n  get_progress_polygon_points() {\n    const bar_progress = this.$bar_progress\n    return [bar_progress.getEndX() - 5, bar_progress.getY() + bar_progress.getHeight(), bar_progress.getEndX() + 5, bar_progress.getY() + bar_progress.getHeight(), bar_progress.getEndX(), bar_progress.getY() + bar_progress.getHeight() - 8.66]\n  }\n\n  bind() {\n    if (this.invalid) return\n    this.setup_click_event()\n  }\n\n  setup_click_event() {\n    $.on(this.group, 'focus ' + this.gantt.options.popup_trigger, (e) => {\n      if (this.action_completed) {\n        // just finished a move action, wait for a few seconds\n        return\n      }\n\n      this.show_popup()\n      this.gantt.unselect_all()\n      this.group.classList.add('active')\n    })\n\n    $.on(this.group, 'dblclick', (e) => {\n      if (this.action_completed) {\n        // just finished a move action, wait for a few seconds\n        return\n      }\n\n      this.gantt.trigger_event('click', [this.task])\n    })\n  }\n\n  show_popup() {\n    if (this.gantt.bar_being_dragged) return\n\n    const start_date = date_utils.format(this.task._start, 'MMM D', this.gantt.options.language)\n    const end_date = date_utils.format(date_utils.add(this.task._end, -1, 'second'), 'MMM D', this.gantt.options.language)\n    const subtitle = start_date + ' - ' + end_date\n\n    this.gantt.show_popup({\n      target_element: this.$bar,\n      title: this.task.name,\n      subtitle: subtitle,\n      task: this.task,\n    })\n  }\n\n  update_bar_position({ x = null, width = null }) {\n    const bar = this.$bar\n    if (x) {\n      // get all x values of parent task\n      const xs = this.task.dependencies.map((dep) => {\n        return this.gantt.get_bar(dep).$bar.getX()\n      })\n      // child task must not go before parent\n      const valid_x = xs.reduce((prev, curr) => {\n        return x >= curr\n      }, x)\n      if (!valid_x) {\n        width = null\n        return\n      }\n      this.update_attr(bar, 'x', x)\n    }\n    if (width && width >= this.gantt.options.column_width) {\n      this.update_attr(bar, 'width', width)\n    }\n    this.update_label_position()\n    this.update_handle_position()\n    this.update_progressbar_position()\n    this.update_arrow_position()\n  }\n\n  date_changed() {\n    let changed = false\n    const { new_start_date, new_end_date } = this.compute_start_end_date()\n\n    if (Number(this.task._start) !== Number(new_start_date)) {\n      changed = true\n      this.task._start = new_start_date\n    }\n\n    if (Number(this.task._end) !== Number(new_end_date)) {\n      changed = true\n      this.task._end = new_end_date\n    }\n\n    if (!changed) return\n\n    this.gantt.trigger_event('date_change', [this.task, new_start_date, date_utils.add(new_end_date, -1, 'second')])\n  }\n\n  progress_changed() {\n    const new_progress = this.compute_progress()\n    this.task.progress = new_progress\n    this.gantt.trigger_event('progress_change', [this.task, new_progress])\n  }\n\n  set_action_completed() {\n    this.action_completed = true\n    setTimeout(() => (this.action_completed = false), 1000)\n  }\n\n  compute_start_end_date() {\n    const bar = this.$bar\n    const x_in_units = bar.getX() / this.gantt.options.column_width\n    const new_start_date = date_utils.add(this.gantt.gantt_start, x_in_units * this.gantt.options.step, 'hour')\n    const width_in_units = bar.getWidth() / this.gantt.options.column_width\n    const new_end_date = date_utils.add(new_start_date, width_in_units * this.gantt.options.step, 'hour')\n\n    return { new_start_date, new_end_date }\n  }\n\n  compute_progress() {\n    const progress = (this.$bar_progress.getWidth() / this.$bar.getWidth()) * 100\n    return parseInt(progress, 10)\n  }\n\n  compute_x() {\n    const { step, column_width } = this.gantt.options\n    const task_start = this.task._start\n    const gantt_start = this.gantt.gantt_start\n\n    const diff = date_utils.diff(task_start, gantt_start, 'hour')\n    let x = (diff / step) * column_width\n\n    if (this.gantt.view_is('Month')) {\n      const diff = date_utils.diff(task_start, gantt_start, 'day')\n      x = (diff * column_width) / 30\n    }\n    return x\n  }\n\n  compute_y() {\n    return this.gantt.options.header_height + this.gantt.options.padding + this.task._index * (this.height + this.gantt.options.padding)\n  }\n\n  get_snap_position(dx) {\n    let odx = dx,\n      rem,\n      position\n\n    if (this.gantt.view_is('Week')) {\n      rem = dx % (this.gantt.options.column_width / 7)\n      position = odx - rem + (rem < this.gantt.options.column_width / 14 ? 0 : this.gantt.options.column_width / 7)\n    } else if (this.gantt.view_is('Month')) {\n      rem = dx % (this.gantt.options.column_width / 30)\n      position = odx - rem + (rem < this.gantt.options.column_width / 60 ? 0 : this.gantt.options.column_width / 30)\n    } else {\n      rem = dx % this.gantt.options.column_width\n      position = odx - rem + (rem < this.gantt.options.column_width / 2 ? 0 : this.gantt.options.column_width)\n    }\n    return position\n  }\n\n  update_attr(element, attr, value) {\n    value = +value\n    if (!isNaN(value)) {\n      element.setAttribute(attr, value)\n    }\n    return element\n  }\n\n  update_progressbar_position() {\n    if (this.invalid) return\n    this.$bar_progress.setAttribute('x', this.$bar.getX())\n    this.$bar_progress.setAttribute('width', this.$bar.getWidth() * (this.task.progress / 100))\n  }\n\n  update_label_position() {\n    const bar = this.$bar,\n      label = this.group.querySelector('.bar-label')\n\n    if (label.getBBox().width > bar.getWidth()) {\n      label.classList.add('big')\n      label.setAttribute('x', bar.getX() + bar.getWidth() + 5)\n    } else {\n      label.classList.remove('big')\n      label.setAttribute('x', bar.getX() + bar.getWidth() / 2)\n    }\n  }\n\n  update_handle_position() {\n    if (this.invalid) return\n    const bar = this.$bar\n    this.handle_group.querySelector('.handle.left').setAttribute('x', bar.getX() + 1)\n    this.handle_group.querySelector('.handle.right').setAttribute('x', bar.getEndX() - 9)\n    const handle = this.group.querySelector('.handle.progress')\n    handle && handle.setAttribute('points', this.get_progress_polygon_points())\n  }\n\n  update_arrow_position() {\n    this.arrows = this.arrows || []\n    for (let arrow of this.arrows) {\n      arrow.update()\n    }\n  }\n}\n\nfunction isFunction(functionToCheck) {\n  var getType = {}\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]'\n}\n","/* eslint-disable prettier/prettier */\n\nimport { createSVG } from './svg_utils'\n\nexport default class Arrow {\n  constructor(gantt, from_task, to_task) {\n    this.gantt = gantt\n    this.from_task = from_task\n    this.to_task = to_task\n\n    this.calculate_path()\n    this.draw()\n  }\n\n  calculate_path() {\n    let start_x = this.from_task.$bar.getX() + this.from_task.$bar.getWidth() / 2\n\n    const condition = () => this.to_task.$bar.getX() < start_x + this.gantt.options.padding && start_x > this.from_task.$bar.getX() + this.gantt.options.padding\n\n    while (condition()) {\n      start_x -= 10\n    }\n\n    const start_y = this.gantt.options.header_height + this.gantt.options.bar_height + (this.gantt.options.padding + this.gantt.options.bar_height) * this.from_task.task._index + this.gantt.options.padding\n\n    const end_x = this.to_task.$bar.getX() - this.gantt.options.padding / 2\n    const end_y = this.gantt.options.header_height + this.gantt.options.bar_height / 2 + (this.gantt.options.padding + this.gantt.options.bar_height) * this.to_task.task._index + this.gantt.options.padding\n\n    const from_is_below_to = this.from_task.task._index > this.to_task.task._index\n    const curve = this.gantt.options.arrow_curve\n    const clockwise = from_is_below_to ? 1 : 0\n    const curve_y = from_is_below_to ? -curve : curve\n    const offset = from_is_below_to ? end_y + this.gantt.options.arrow_curve : end_y - this.gantt.options.arrow_curve\n\n    this.path = `\n            M ${start_x} ${start_y}\n            V ${offset}\n            a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n            L ${end_x} ${end_y}\n            m -5 -5\n            l 5 5\n            l -5 5`\n\n    if (this.to_task.$bar.getX() < this.from_task.$bar.getX() + this.gantt.options.padding) {\n      const down_1 = this.gantt.options.padding / 2 - curve\n      const down_2 = this.to_task.$bar.getY() + this.to_task.$bar.getHeight() / 2 - curve_y\n      const left = this.to_task.$bar.getX() - this.gantt.options.padding\n\n      this.path = `\n                M ${start_x} ${start_y}\n                v ${down_1}\n                a ${curve} ${curve} 0 0 1 -${curve} ${curve}\n                H ${left}\n                a ${curve} ${curve} 0 0 ${clockwise} -${curve} ${curve_y}\n                V ${down_2}\n                a ${curve} ${curve} 0 0 ${clockwise} ${curve} ${curve_y}\n                L ${end_x} ${end_y}\n                m -5 -5\n                l 5 5\n                l -5 5`\n    }\n  }\n\n  draw() {\n    this.element = createSVG('path', {\n      d: this.path,\n      'data-from': this.from_task.task.id,\n      'data-to': this.to_task.task.id,\n    })\n  }\n\n  update() {\n    this.calculate_path()\n    this.element.setAttribute('d', this.path)\n  }\n}\n","/* eslint-disable prettier/prettier */\n\nexport default class Popup {\n  constructor(parent, custom_html) {\n    this.parent = parent\n    this.custom_html = custom_html\n    this.make()\n  }\n\n  make() {\n    this.parent.innerHTML = `\n    <div class=\"title\"></div>\n    <div class=\"subtitle\"></div>\n    <div class=\"pointer\"></div>\n`\n\n    this.hide()\n\n    this.title = this.parent.querySelector('.title')\n    this.subtitle = this.parent.querySelector('.subtitle')\n    this.pointer = this.parent.querySelector('.pointer')\n  }\n\n  show(options) {\n    if (!options.target_element) {\n      throw new Error('target_element is required to show popup')\n    }\n    if (!options.position) {\n      options.position = 'left'\n    }\n    const target_element = options.target_element\n\n    if (this.custom_html) {\n      let html = this.custom_html(options.task)\n      html += '<div class=\"pointer\"></div>'\n      this.parent.innerHTML = html\n      this.pointer = this.parent.querySelector('.pointer')\n    } else {\n      // set data\n      this.title.innerHTML = options.title\n      this.subtitle.innerHTML = options.subtitle\n      this.parent.style.width = this.parent.clientWidth + 'px'\n    }\n\n    // set position\n    let position_meta\n    if (target_element instanceof HTMLElement) {\n      position_meta = target_element.getBoundingClientRect()\n    } else if (target_element instanceof SVGElement) {\n      position_meta = options.target_element.getBBox()\n    }\n\n    if (options.position === 'left') {\n      this.parent.style.left = position_meta.x + (position_meta.width + 10) + 'px'\n      this.parent.style.top = position_meta.y + 'px'\n\n      this.pointer.style.transform = 'rotateZ(90deg)'\n      this.pointer.style.left = '-7px'\n      this.pointer.style.top = '2px'\n    }\n\n    // show\n    this.parent.style.opacity = 1\n  }\n\n  hide() {\n    this.parent.style.opacity = 0\n    this.parent.style.left = 0\n  }\n}\n","/* eslint-disable prettier/prettier */\n\nimport date_utils from './date_utils'\nimport { $, createSVG } from './svg_utils'\nimport Bar from './bar'\nimport Arrow from './arrow'\nimport Popup from './popup'\n\nimport './gantt.scss'\n\nconst VIEW_MODE = {\n  QUARTER_DAY: 'Quarter Day',\n  HALF_DAY: 'Half Day',\n  DAY: 'Day',\n  WEEK: 'Week',\n  MONTH: 'Month',\n  YEAR: 'Year',\n}\n\nexport default class Gantt {\n  constructor(wrapper, tasks, options) {\n    this.setup_wrapper(wrapper)\n    this.setup_options(options)\n    this.setup_tasks(tasks)\n    // initialize with default view mode\n    this.change_view_mode()\n    this.bind_events()\n  }\n\n  setup_wrapper(element) {\n    let svg_element, wrapper_element\n\n    // CSS Selector is passed\n    if (typeof element === 'string') {\n      element = document.querySelector(element)\n    }\n\n    // get the SVGElement\n    if (element instanceof HTMLElement) {\n      wrapper_element = element\n      svg_element = element.querySelector('svg')\n    } else if (element instanceof SVGElement) {\n      svg_element = element\n    } else {\n      throw new TypeError('Frappé Gantt only supports usage of a string CSS selector,' + \" HTML DOM element or SVG DOM element for the 'element' parameter\")\n    }\n\n    // svg element\n    if (!svg_element) {\n      // create it\n      this.$svg = createSVG('svg', {\n        append_to: wrapper_element,\n        class: 'gantt',\n      })\n    } else {\n      this.$svg = svg_element\n      this.$svg.classList.add('gantt')\n    }\n\n    // wrapper element\n    this.$container = document.createElement('div')\n    this.$container.classList.add('gantt-container')\n\n    const parent_element = this.$svg.parentElement\n    parent_element.appendChild(this.$container)\n    this.$container.appendChild(this.$svg)\n\n    // popup wrapper\n    this.popup_wrapper = document.createElement('div')\n    this.popup_wrapper.classList.add('popup-wrapper')\n    this.$container.appendChild(this.popup_wrapper)\n  }\n\n  setup_options(options) {\n    const default_options = {\n      header_height: 50,\n      column_width: 30,\n      step: 24,\n      view_modes: [...Object.values(VIEW_MODE)],\n      bar_height: 20,\n      bar_corner_radius: 3,\n      arrow_curve: 5,\n      padding: 18,\n      view_mode: 'Day',\n      date_format: 'YYYY-MM-DD',\n      popup_trigger: 'click',\n      custom_popup_html: null,\n      language: 'en',\n    }\n    this.options = Object.assign({}, default_options, options)\n  }\n\n  setup_tasks(tasks) {\n    // prepare tasks\n    this.tasks = tasks.map((task, i) => {\n      // convert to Date objects\n      task._start = date_utils.parse(task.start)\n      task._end = date_utils.parse(task.end)\n\n      // make task invalid if duration too large\n      if (date_utils.diff(task._end, task._start, 'year') > 10) {\n        task.end = null\n      }\n\n      // cache index\n      task._index = i\n\n      // invalid dates\n      if (!task.start && !task.end) {\n        const today = date_utils.today()\n        task._start = today\n        task._end = date_utils.add(today, 2, 'day')\n      }\n\n      if (!task.start && task.end) {\n        task._start = date_utils.add(task._end, -2, 'day')\n      }\n\n      if (task.start && !task.end) {\n        task._end = date_utils.add(task._start, 2, 'day')\n      }\n\n      // if hours is not set, assume the last day is full day\n      // e.g: 2018-09-09 becomes 2018-09-09 23:59:59\n      const task_end_values = date_utils.get_date_values(task._end)\n      if (task_end_values.slice(3).every((d) => d === 0)) {\n        task._end = date_utils.add(task._end, 24, 'hour')\n      }\n\n      // invalid flag\n      if (!task.start || !task.end) {\n        task.invalid = true\n      }\n\n      // dependencies\n      if (typeof task.dependencies === 'string' || !task.dependencies) {\n        let deps = []\n        if (task.dependencies) {\n          deps = task.dependencies\n            .split(',')\n            .map((d) => d.trim())\n            .filter((d) => d)\n        }\n        task.dependencies = deps\n      }\n\n      // uids\n      if (!task.id) {\n        task.id = generate_id(task)\n      }\n\n      return task\n    })\n\n    this.setup_dependencies()\n  }\n\n  setup_dependencies() {\n    this.dependency_map = {}\n    for (let t of this.tasks) {\n      for (let d of t.dependencies) {\n        this.dependency_map[d] = this.dependency_map[d] || []\n        this.dependency_map[d].push(t.id)\n      }\n    }\n  }\n\n  refresh(tasks) {\n    this.setup_tasks(tasks)\n    this.change_view_mode()\n  }\n\n  change_view_mode(mode = this.options.view_mode) {\n    this.update_view_scale(mode)\n    this.setup_dates()\n    this.render()\n    // fire viewmode_change event\n    this.trigger_event('view_change', [mode])\n  }\n\n  update_view_scale(view_mode) {\n    this.options.view_mode = view_mode\n\n    if (view_mode === VIEW_MODE.DAY) {\n      this.options.step = 24\n      this.options.column_width = 38\n    } else if (view_mode === VIEW_MODE.HALF_DAY) {\n      this.options.step = 24 / 2\n      this.options.column_width = 38\n    } else if (view_mode === VIEW_MODE.QUARTER_DAY) {\n      this.options.step = 24 / 4\n      this.options.column_width = 38\n    } else if (view_mode === VIEW_MODE.WEEK) {\n      this.options.step = 24 * 7\n      this.options.column_width = 140\n    } else if (view_mode === VIEW_MODE.MONTH) {\n      this.options.step = 24 * 30\n      this.options.column_width = 120\n    } else if (view_mode === VIEW_MODE.YEAR) {\n      this.options.step = 24 * 365\n      this.options.column_width = 120\n    }\n  }\n\n  setup_dates() {\n    this.setup_gantt_dates()\n    this.setup_date_values()\n  }\n\n  setup_gantt_dates() {\n    this.gantt_start = this.gantt_end = null\n\n    for (let task of this.tasks) {\n      // set global start and end date\n      if (!this.gantt_start || task._start < this.gantt_start) {\n        this.gantt_start = task._start\n      }\n      if (!this.gantt_end || task._end > this.gantt_end) {\n        this.gantt_end = task._end\n      }\n    }\n\n    this.gantt_start = date_utils.start_of(this.gantt_start, 'day')\n    this.gantt_end = date_utils.start_of(this.gantt_end, 'day')\n\n    // add date padding on both sides\n    if (this.view_is([VIEW_MODE.QUARTER_DAY, VIEW_MODE.HALF_DAY])) {\n      this.gantt_start = date_utils.add(this.gantt_start, -7, 'day')\n      this.gantt_end = date_utils.add(this.gantt_end, 7, 'day')\n    } else if (this.view_is(VIEW_MODE.MONTH)) {\n      this.gantt_start = date_utils.start_of(this.gantt_start, 'year')\n      this.gantt_end = date_utils.add(this.gantt_end, 1, 'year')\n    } else if (this.view_is(VIEW_MODE.YEAR)) {\n      this.gantt_start = date_utils.add(this.gantt_start, -2, 'year')\n      this.gantt_end = date_utils.add(this.gantt_end, 2, 'year')\n    } else {\n      this.gantt_start = date_utils.add(this.gantt_start, -1, 'month')\n      this.gantt_end = date_utils.add(this.gantt_end, 1, 'month')\n    }\n  }\n\n  setup_date_values() {\n    this.dates = []\n    let cur_date = null\n\n    while (cur_date === null || cur_date < this.gantt_end) {\n      if (!cur_date) {\n        cur_date = date_utils.clone(this.gantt_start)\n      } else {\n        if (this.view_is(VIEW_MODE.YEAR)) {\n          cur_date = date_utils.add(cur_date, 1, 'year')\n        } else if (this.view_is(VIEW_MODE.MONTH)) {\n          cur_date = date_utils.add(cur_date, 1, 'month')\n        } else {\n          cur_date = date_utils.add(cur_date, this.options.step, 'hour')\n        }\n      }\n      this.dates.push(cur_date)\n    }\n  }\n\n  bind_events() {\n    this.bind_grid_click()\n    this.bind_bar_events()\n  }\n\n  render() {\n    this.clear()\n    this.setup_layers()\n    this.make_grid()\n    this.make_dates()\n    this.make_bars()\n    this.make_arrows()\n    this.map_arrows_on_bars()\n    this.set_width()\n    this.set_scroll_position()\n  }\n\n  setup_layers() {\n    this.layers = {}\n    const layers = ['grid', 'date', 'arrow', 'progress', 'bar', 'details']\n    // make group layers\n    for (let layer of layers) {\n      this.layers[layer] = createSVG('g', {\n        class: layer,\n        append_to: this.$svg,\n      })\n    }\n  }\n\n  make_grid() {\n    this.make_grid_background()\n    this.make_grid_rows()\n    this.make_grid_header()\n    this.make_grid_ticks()\n    this.make_grid_highlights()\n  }\n\n  make_grid_background() {\n    const grid_width = this.dates.length * this.options.column_width\n    const grid_height = this.options.header_height + this.options.padding + (this.options.bar_height + this.options.padding) * this.tasks.length\n\n    createSVG('rect', {\n      x: 0,\n      y: 0,\n      width: grid_width,\n      height: grid_height,\n      class: 'grid-background',\n      append_to: this.layers.grid,\n    })\n\n    $.attr(this.$svg, {\n      height: grid_height + this.options.padding + 100,\n      width: '100%',\n    })\n  }\n\n  make_grid_rows() {\n    const rows_layer = createSVG('g', { append_to: this.layers.grid })\n    const lines_layer = createSVG('g', { append_to: this.layers.grid })\n\n    const row_width = this.dates.length * this.options.column_width\n    const row_height = this.options.bar_height + this.options.padding\n\n    let row_y = this.options.header_height + this.options.padding / 2\n\n    for (let task of this.tasks) {\n      createSVG('rect', {\n        x: 0,\n        y: row_y,\n        width: row_width,\n        height: row_height,\n        class: 'grid-row',\n        append_to: rows_layer,\n      })\n\n      createSVG('line', {\n        x1: 0,\n        y1: row_y + row_height,\n        x2: row_width,\n        y2: row_y + row_height,\n        class: 'row-line',\n        append_to: lines_layer,\n      })\n\n      row_y += this.options.bar_height + this.options.padding\n    }\n  }\n\n  make_grid_header() {\n    const header_width = this.dates.length * this.options.column_width\n    const header_height = this.options.header_height + 10\n    createSVG('rect', {\n      x: 0,\n      y: 0,\n      width: header_width,\n      height: header_height,\n      class: 'grid-header',\n      append_to: this.layers.grid,\n    })\n  }\n\n  make_grid_ticks() {\n    let tick_x = 0\n    let tick_y = this.options.header_height + this.options.padding / 2\n    let tick_height = (this.options.bar_height + this.options.padding) * this.tasks.length\n\n    for (let date of this.dates) {\n      let tick_class = 'tick'\n      // thick tick for monday\n      if (this.view_is(VIEW_MODE.DAY) && date.getDate() === 1) {\n        tick_class += ' thick'\n      }\n      // thick tick for first week\n      if (this.view_is(VIEW_MODE.WEEK) && date.getDate() >= 1 && date.getDate() < 8) {\n        tick_class += ' thick'\n      }\n      // thick ticks for quarters\n      if (this.view_is(VIEW_MODE.MONTH) && date.getMonth() % 3 === 0) {\n        tick_class += ' thick'\n      }\n\n      createSVG('path', {\n        d: `M ${tick_x} ${tick_y} v ${tick_height}`,\n        class: tick_class,\n        append_to: this.layers.grid,\n      })\n\n      if (this.view_is(VIEW_MODE.MONTH)) {\n        tick_x += (date_utils.get_days_in_month(date) * this.options.column_width) / 30\n      } else {\n        tick_x += this.options.column_width\n      }\n    }\n  }\n\n  make_grid_highlights() {\n    // highlight today's date\n    if (this.view_is(VIEW_MODE.DAY)) {\n      const x = (date_utils.diff(date_utils.today(), this.gantt_start, 'hour') / this.options.step) * this.options.column_width\n      const y = 0\n\n      const width = this.options.column_width\n      const height = (this.options.bar_height + this.options.padding) * this.tasks.length + this.options.header_height + this.options.padding / 2\n\n      createSVG('rect', {\n        x,\n        y,\n        width,\n        height,\n        class: 'today-highlight',\n        append_to: this.layers.grid,\n      })\n    }\n  }\n\n  make_dates() {\n    for (let date of this.get_dates_to_draw()) {\n      createSVG('text', {\n        x: date.lower_x,\n        y: date.lower_y,\n        innerHTML: date.lower_text,\n        class: 'lower-text',\n        append_to: this.layers.date,\n      })\n\n      if (date.upper_text) {\n        const $upper_text = createSVG('text', {\n          x: date.upper_x,\n          y: date.upper_y,\n          innerHTML: date.upper_text,\n          class: 'upper-text',\n          append_to: this.layers.date,\n        })\n\n        // remove out-of-bound dates\n        if ($upper_text.getBBox().x2 > this.layers.grid.getBBox().width) {\n          $upper_text.remove()\n        }\n      }\n    }\n  }\n\n  get_dates_to_draw() {\n    let last_date = null\n    const dates = this.dates.map((date, i) => {\n      const d = this.get_date_info(date, last_date, i)\n      last_date = date\n      return d\n    })\n    return dates\n  }\n\n  get_date_info(date, last_date, i) {\n    if (!last_date) {\n      last_date = date_utils.add(date, 1, 'year')\n    }\n    const date_text = {\n      'Quarter Day_lower': date_utils.format(date, 'HH', this.options.language),\n      'Half Day_lower': date_utils.format(date, 'HH', this.options.language),\n      Day_lower: date.getDate() !== last_date.getDate() ? date_utils.format(date, 'D', this.options.language) : '',\n      Week_lower: date.getMonth() !== last_date.getMonth() ? date_utils.format(date, 'D MMM', this.options.language) : date_utils.format(date, 'D', this.options.language),\n      Month_lower: date_utils.format(date, 'MMMM', this.options.language),\n      Year_lower: date_utils.format(date, 'YYYY', this.options.language),\n      'Quarter Day_upper': date.getDate() !== last_date.getDate() ? date_utils.format(date, 'D MMM', this.options.language) : '',\n      'Half Day_upper': date.getDate() !== last_date.getDate() ? (date.getMonth() !== last_date.getMonth() ? date_utils.format(date, 'D MMM', this.options.language) : date_utils.format(date, 'D', this.options.language)) : '',\n      Day_upper: date.getMonth() !== last_date.getMonth() ? date_utils.format(date, 'MMMM', this.options.language) : '',\n      Week_upper: date.getMonth() !== last_date.getMonth() ? date_utils.format(date, 'MMMM', this.options.language) : '',\n      Month_upper: date.getFullYear() !== last_date.getFullYear() ? date_utils.format(date, 'YYYY', this.options.language) : '',\n      Year_upper: date.getFullYear() !== last_date.getFullYear() ? date_utils.format(date, 'YYYY', this.options.language) : '',\n    }\n\n    const base_pos = {\n      x: i * this.options.column_width,\n      lower_y: this.options.header_height,\n      upper_y: this.options.header_height - 25,\n    }\n\n    const x_pos = {\n      'Quarter Day_lower': (this.options.column_width * 4) / 2,\n      'Quarter Day_upper': 0,\n      'Half Day_lower': (this.options.column_width * 2) / 2,\n      'Half Day_upper': 0,\n      Day_lower: this.options.column_width / 2,\n      Day_upper: (this.options.column_width * 30) / 2,\n      Week_lower: 0,\n      Week_upper: (this.options.column_width * 4) / 2,\n      Month_lower: this.options.column_width / 2,\n      Month_upper: (this.options.column_width * 12) / 2,\n      Year_lower: this.options.column_width / 2,\n      Year_upper: (this.options.column_width * 30) / 2,\n    }\n\n    return {\n      upper_text: date_text[`${this.options.view_mode}_upper`],\n      lower_text: date_text[`${this.options.view_mode}_lower`],\n      upper_x: base_pos.x + x_pos[`${this.options.view_mode}_upper`],\n      upper_y: base_pos.upper_y,\n      lower_x: base_pos.x + x_pos[`${this.options.view_mode}_lower`],\n      lower_y: base_pos.lower_y,\n    }\n  }\n\n  make_bars() {\n    this.bars = this.tasks.map((task) => {\n      const bar = new Bar(this, task)\n      this.layers.bar.appendChild(bar.group)\n      return bar\n    })\n  }\n\n  make_arrows() {\n    this.arrows = []\n    for (let task of this.tasks) {\n      let arrows = []\n      arrows = task.dependencies\n        .map((task_id) => {\n          const dependency = this.get_task(task_id)\n          if (!dependency) return\n          const arrow = new Arrow(\n            this,\n            this.bars[dependency._index], // from_task\n            this.bars[task._index], // to_task\n          )\n          this.layers.arrow.appendChild(arrow.element)\n          return arrow\n        })\n        .filter(Boolean) // filter falsy values\n      this.arrows = this.arrows.concat(arrows)\n    }\n  }\n\n  map_arrows_on_bars() {\n    for (let bar of this.bars) {\n      bar.arrows = this.arrows.filter((arrow) => {\n        return arrow.from_task.task.id === bar.task.id || arrow.to_task.task.id === bar.task.id\n      })\n    }\n  }\n\n  set_width() {\n    const cur_width = this.$svg.getBoundingClientRect().width\n    const actual_width = this.$svg.querySelector('.grid .grid-row').getAttribute('width')\n    if (cur_width < actual_width) {\n      this.$svg.setAttribute('width', actual_width)\n    }\n  }\n\n  set_scroll_position() {\n    const parent_element = this.$svg.parentElement\n    if (!parent_element) return\n\n    const hours_before_first_task = date_utils.diff(this.get_oldest_starting_date(), this.gantt_start, 'hour')\n\n    const scroll_pos = (hours_before_first_task / this.options.step) * this.options.column_width - this.options.column_width\n\n    parent_element.scrollLeft = scroll_pos\n  }\n\n  bind_grid_click() {\n    $.on(this.$svg, this.options.popup_trigger, '.grid-row, .grid-header', () => {\n      this.unselect_all()\n      this.hide_popup()\n    })\n  }\n\n  bind_bar_events() {\n    let is_dragging = false\n    let x_on_start = 0\n    let y_on_start = 0\n    let is_resizing_left = false\n    let is_resizing_right = false\n    let parent_bar_id = null\n    let bars = [] // instanceof Bar\n    this.bar_being_dragged = null\n\n    function action_in_progress() {\n      return is_dragging || is_resizing_left || is_resizing_right\n    }\n\n    $.on(this.$svg, 'mousedown', '.bar-wrapper, .handle', (e, element) => {\n      const bar_wrapper = $.closest('.bar-wrapper', element)\n\n      if (element.classList.contains('left')) {\n        is_resizing_left = true\n      } else if (element.classList.contains('right')) {\n        is_resizing_right = true\n      } else if (element.classList.contains('bar-wrapper')) {\n        is_dragging = true\n      }\n\n      bar_wrapper.classList.add('active')\n\n      x_on_start = e.offsetX\n      y_on_start = e.offsetY\n\n      parent_bar_id = bar_wrapper.getAttribute('data-id')\n      const ids = [parent_bar_id, ...this.get_all_dependent_tasks(parent_bar_id)]\n      bars = ids.map((id) => this.get_bar(id))\n\n      this.bar_being_dragged = parent_bar_id\n\n      bars.forEach((bar) => {\n        const $bar = bar.$bar\n        $bar.ox = $bar.getX()\n        $bar.oy = $bar.getY()\n        $bar.owidth = $bar.getWidth()\n        $bar.finaldx = 0\n      })\n    })\n\n    $.on(this.$svg, 'mousemove', (e) => {\n      if (!action_in_progress()) return\n      const dx = e.offsetX - x_on_start\n      const dy = e.offsetY - y_on_start\n\n      bars.forEach((bar) => {\n        const $bar = bar.$bar\n        $bar.finaldx = this.get_snap_position(dx)\n        this.hide_popup()\n        if (is_resizing_left) {\n          if (parent_bar_id === bar.task.id) {\n            bar.update_bar_position({\n              x: $bar.ox + $bar.finaldx,\n              width: $bar.owidth - $bar.finaldx,\n            })\n          } else {\n            bar.update_bar_position({\n              x: $bar.ox + $bar.finaldx,\n            })\n          }\n        } else if (is_resizing_right) {\n          if (parent_bar_id === bar.task.id) {\n            bar.update_bar_position({\n              width: $bar.owidth + $bar.finaldx,\n            })\n          }\n        } else if (is_dragging) {\n          bar.update_bar_position({ x: $bar.ox + $bar.finaldx })\n        }\n      })\n    })\n\n    document.addEventListener('mouseup', (e) => {\n      if (is_dragging || is_resizing_left || is_resizing_right) {\n        bars.forEach((bar) => bar.group.classList.remove('active'))\n      }\n\n      is_dragging = false\n      is_resizing_left = false\n      is_resizing_right = false\n    })\n\n    $.on(this.$svg, 'mouseup', (e) => {\n      this.bar_being_dragged = null\n      bars.forEach((bar) => {\n        const $bar = bar.$bar\n        if (!$bar.finaldx) return\n        bar.date_changed()\n        bar.set_action_completed()\n      })\n    })\n\n    this.bind_bar_progress()\n  }\n\n  bind_bar_progress() {\n    let x_on_start = 0\n    let y_on_start = 0\n    let is_resizing = null\n    let bar = null\n    let $bar_progress = null\n    let $bar = null\n\n    $.on(this.$svg, 'mousedown', '.handle.progress', (e, handle) => {\n      is_resizing = true\n      x_on_start = e.offsetX\n      y_on_start = e.offsetY\n\n      const $bar_wrapper = $.closest('.bar-wrapper', handle)\n      const id = $bar_wrapper.getAttribute('data-id')\n      bar = this.get_bar(id)\n\n      $bar_progress = bar.$bar_progress\n      $bar = bar.$bar\n\n      $bar_progress.finaldx = 0\n      $bar_progress.owidth = $bar_progress.getWidth()\n      $bar_progress.min_dx = -$bar_progress.getWidth()\n      $bar_progress.max_dx = $bar.getWidth() - $bar_progress.getWidth()\n    })\n\n    $.on(this.$svg, 'mousemove', (e) => {\n      if (!is_resizing) return\n      let dx = e.offsetX - x_on_start\n      let dy = e.offsetY - y_on_start\n\n      if (dx > $bar_progress.max_dx) {\n        dx = $bar_progress.max_dx\n      }\n      if (dx < $bar_progress.min_dx) {\n        dx = $bar_progress.min_dx\n      }\n\n      const $handle = bar.$handle_progress\n      $.attr($bar_progress, 'width', $bar_progress.owidth + dx)\n      $.attr($handle, 'points', bar.get_progress_polygon_points())\n      $bar_progress.finaldx = dx\n    })\n\n    $.on(this.$svg, 'mouseup', () => {\n      is_resizing = false\n      if (!($bar_progress && $bar_progress.finaldx)) return\n      bar.progress_changed()\n      bar.set_action_completed()\n    })\n  }\n\n  get_all_dependent_tasks(task_id) {\n    let out = []\n    let to_process = [task_id]\n    while (to_process.length) {\n      const deps = to_process.reduce((acc, curr) => {\n        acc = acc.concat(this.dependency_map[curr])\n        return acc\n      }, [])\n\n      out = out.concat(deps)\n      to_process = deps.filter((d) => !to_process.includes(d))\n    }\n\n    return out.filter(Boolean)\n  }\n\n  get_snap_position(dx) {\n    let odx = dx,\n      rem,\n      position\n\n    if (this.view_is(VIEW_MODE.WEEK)) {\n      rem = dx % (this.options.column_width / 7)\n      position = odx - rem + (rem < this.options.column_width / 14 ? 0 : this.options.column_width / 7)\n    } else if (this.view_is(VIEW_MODE.MONTH)) {\n      rem = dx % (this.options.column_width / 30)\n      position = odx - rem + (rem < this.options.column_width / 60 ? 0 : this.options.column_width / 30)\n    } else {\n      rem = dx % this.options.column_width\n      position = odx - rem + (rem < this.options.column_width / 2 ? 0 : this.options.column_width)\n    }\n    return position\n  }\n\n  unselect_all() {\n    ;[...this.$svg.querySelectorAll('.bar-wrapper')].forEach((el) => {\n      el.classList.remove('active')\n    })\n  }\n\n  view_is(modes) {\n    if (typeof modes === 'string') {\n      return this.options.view_mode === modes\n    }\n\n    if (Array.isArray(modes)) {\n      return modes.some((mode) => this.options.view_mode === mode)\n    }\n\n    return false\n  }\n\n  get_task(id) {\n    return this.tasks.find((task) => {\n      return task.id === id\n    })\n  }\n\n  get_bar(id) {\n    return this.bars.find((bar) => {\n      return bar.task.id === id\n    })\n  }\n\n  show_popup(options) {\n    if (!this.popup) {\n      this.popup = new Popup(this.popup_wrapper, this.options.custom_popup_html)\n    }\n    this.popup.show(options)\n  }\n\n  hide_popup() {\n    this.popup && this.popup.hide()\n  }\n\n  trigger_event(event, args) {\n    if (this.options['on_' + event]) {\n      this.options['on_' + event].apply(null, args)\n    }\n  }\n\n  /**\n   * Gets the oldest starting date from the list of tasks\n   *\n   * @returns Date\n   * @memberof Gantt\n   */\n  get_oldest_starting_date() {\n    return this.tasks.map((task) => task._start).reduce((prev_date, cur_date) => (cur_date <= prev_date ? cur_date : prev_date))\n  }\n\n  /**\n   * Clear all elements from the parent svg element\n   *\n   * @memberof Gantt\n   */\n  clear() {\n    this.$svg.innerHTML = ''\n  }\n}\n\nGantt.VIEW_MODE = VIEW_MODE\n\nfunction generate_id(task) {\n  return task.name + '_' + Math.random().toString(36).slice(2, 12)\n}\n"],"names":["YEAR","MONTH","DAY","HOUR","MINUTE","SECOND","MILLISECOND","date_utils","parse","date","date_separator","time_separator","Date","date_parts","time_parts","parts","split","map","val","parseInt","vals","length","parseFloat","concat","to_string","with_time","TypeError","this","get_date_values","i","padStart","date_string","time_string","format","format_string","lang","month_name","Intl","DateTimeFormat","month","month_name_capitalized","charAt","toUpperCase","slice","values","d","format_map","YYYY","MM","DD","HH","mm","ss","SSS","D","MMMM","MMM","str","formatted_values","Object","keys","sort","a","b","forEach","key","includes","replace","push","value","diff","date_a","date_b","scale","milliseconds","seconds","hours","minutes","days","months","years","endsWith","Math","floor","today","now","add","qty","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","start_of","scores","should_reset","_scale","clone","get_days_in_month","no_of_days","year","targetLength","padString","String","repeat","$","expr","con","document","querySelector","createSVG","tag","attrs","elem","createElementNS","attr","append_to","appendChild","innerHTML","setAttribute","animateSVG","svgElement","from","to","animatedSvgElement","dur","begin","animEl","attributeName","animateElement","calcMode","keyTimes","keySplines","cubic_bezier","getAnimationElement","event","createEvent","initEvent","eventName","dispatchEvent","name","ease","linear","on","element","selector","callback","delegate","bind","off","handler","removeEventListener","addEventListener","e","delegatedTarget","target","closest","call","matches","parentNode","getAttribute","Bar","constructor","gantt","task","set_defaults","prepare","draw","action_completed","prepare_values","prepare_helpers","invalid","height","options","bar_height","x","compute_x","y","compute_y","corner_radius","bar_corner_radius","duration","_end","_start","step","width","column_width","progress_width","progress","group","class","custom_class","id","bar_group","handle_group","SVGElement","prototype","getX","getY","getWidth","getHeight","getEndX","draw_bar","draw_progress_bar","draw_label","draw_resize_handles","$bar","rx","ry","classList","$bar_progress","requestAnimationFrame","update_label_position","bar","$handle_progress","points","get_progress_polygon_points","join","bar_progress","setup_click_event","popup_trigger","show_popup","unselect_all","trigger_event","bar_being_dragged","subtitle","language","target_element","title","update_bar_position","dependencies","dep","get_bar","reduce","prev","curr","update_attr","update_handle_position","update_progressbar_position","update_arrow_position","date_changed","changed","new_start_date","new_end_date","compute_start_end_date","Number","progress_changed","new_progress","compute_progress","set_action_completed","setTimeout","x_in_units","gantt_start","width_in_units","task_start","view_is","header_height","padding","_index","get_snap_position","dx","rem","position","odx","isNaN","label","getBBox","remove","handle","arrows","arrow","update","Arrow","from_task","to_task","calculate_path","start_x","condition","start_y","end_x","end_y","from_is_below_to","curve","arrow_curve","clockwise","curve_y","offset","path","down_1","down_2","left","Popup","parent","custom_html","make","hide","pointer","show","Error","html","style","clientWidth","position_meta","HTMLElement","getBoundingClientRect","top","transform","opacity","VIEW_MODE","QUARTER_DAY","HALF_DAY","WEEK","Gantt","wrapper","tasks","setup_wrapper","setup_options","setup_tasks","change_view_mode","bind_events","svg_element","wrapper_element","$svg","$container","createElement","parentElement","popup_wrapper","default_options","view_modes","view_mode","date_format","custom_popup_html","assign","start","end","every","deps","trim","filter","random","toString","generate_id","setup_dependencies","dependency_map","t","refresh","mode","update_view_scale","setup_dates","render","setup_gantt_dates","setup_date_values","gantt_end","dates","cur_date","bind_grid_click","bind_bar_events","clear","setup_layers","make_grid","make_dates","make_bars","make_arrows","map_arrows_on_bars","set_width","set_scroll_position","layers","layer","make_grid_background","make_grid_rows","make_grid_header","make_grid_ticks","make_grid_highlights","grid_width","grid_height","grid","rows_layer","lines_layer","row_width","row_height","row_y","x1","y1","x2","y2","tick_x","tick_y","tick_height","tick_class","get_dates_to_draw","lower_x","lower_y","lower_text","upper_text","$upper_text","upper_x","upper_y","last_date","get_date_info","date_text","Day_lower","Week_lower","Month_lower","Year_lower","Day_upper","Week_upper","Month_upper","Year_upper","base_pos","x_pos","bars","task_id","dependency","get_task","Boolean","cur_width","actual_width","parent_element","scroll_pos","get_oldest_starting_date","scrollLeft","hide_popup","is_dragging","x_on_start","y_on_start","is_resizing_left","is_resizing_right","parent_bar_id","bar_wrapper","contains","offsetX","offsetY","ids","get_all_dependent_tasks","ox","oy","owidth","finaldx","bind_bar_progress","is_resizing","min_dx","max_dx","$handle","out","to_process","acc","querySelectorAll","el","modes","Array","isArray","some","find","popup","args","apply","prev_date"],"mappings":"kCAEA,MAAMA,EAAO,OACPC,EAAQ,QACRC,EAAM,MACNC,EAAO,OACPC,EAAS,SACTC,EAAS,SACTC,EAAc,cAEL,IAAAC,EAAA,CACbC,MAAMC,EAAMC,EAAiB,IAAKC,EAAiB,QACjD,GAAIF,aAAgBG,KAClB,OAAOH,EAET,GAAoB,iBAATA,EAAmB,CAC5B,IAAII,EAAYC,EAChB,MAAMC,EAAQN,EAAKO,MAAM,KAEzBH,EAAaE,EAAM,GAAGC,MAAMN,GAAgBO,KAAKC,GAAQC,SAASD,EAAK,MACvEJ,EAAaC,EAAM,IAAMA,EAAM,GAAGC,MAAML,GAGxCE,EAAW,GAAKA,EAAW,GAAK,EAEhC,IAAIO,EAAOP,EAUX,OARIC,GAAcA,EAAWO,SACF,GAArBP,EAAWO,SACbP,EAAW,GAAK,KAAOA,EAAW,GAClCA,EAAW,GAAiC,IAA5BQ,WAAWR,EAAW,KAExCM,EAAOA,EAAKG,OAAOT,IAGd,IAAIF,QAAQQ,KAIvBI,UAAUf,EAAMgB,GAAY,GAC1B,KAAMhB,aAAgBG,MACpB,MAAM,IAAIc,UAAU,yBAEtB,MAAMN,EAAOO,KAAKC,gBAAgBnB,GAAMQ,KAAI,CAACC,EAAKW,KACtC,IAANA,IAEFX,GAAY,GAILY,EAASZ,EAAM,GADd,IAANW,EACwB,EAGF,EAHK,QAK3BE,EAAc,GAAGX,EAAK,MAAMA,EAAK,MAAMA,EAAK,KAC5CY,EAAc,GAAGZ,EAAK,MAAMA,EAAK,MAAMA,EAAK,MAAMA,EAAK,KAE7D,OAAOW,GAAeN,EAAY,IAAMO,EAAc,KAGxDC,OAAOxB,EAAMyB,EAAgB,0BAA2BC,EAAO,MAC7D,MAGMC,EAHiB,IAAIC,KAAKC,eAAeH,EAAM,CACnDI,MAAO,SAEyBN,OAAOxB,GACnC+B,EAAyBJ,EAAWK,OAAO,GAAGC,cAAgBN,EAAWO,MAAM,GAE/EC,EAASjB,KAAKC,gBAAgBnB,GAAMQ,KAAK4B,GAAMf,EAASe,EAAG,EAAG,KAC9DC,EAAa,CACjBC,KAAMH,EAAO,GACbI,GAAIlB,GAAUc,EAAO,GAAK,EAAG,EAAG,GAChCK,GAAIL,EAAO,GACXM,GAAIN,EAAO,GACXO,GAAIP,EAAO,GACXQ,GAAIR,EAAO,GACXS,IAAKT,EAAO,GACZU,EAAGV,EAAO,GACVW,KAAMf,EACNgB,IAAKhB,GAGP,IAAIiB,EAAMvB,EACV,MAAMwB,EAAmB,GAezB,OAbAC,OAAOC,KAAKd,GACTe,MAAK,CAACC,EAAGC,IAAMA,EAAE1C,OAASyC,EAAEzC,SAC5B2C,SAASC,IACJR,EAAIS,SAASD,KACfR,EAAMA,EAAIU,QAAQF,EAAK,IAAIP,EAAiBrC,UAC5CqC,EAAiBU,KAAKtB,EAAWmB,QAIvCP,EAAiBM,SAAQ,CAACK,EAAOxC,KAC/B4B,EAAMA,EAAIU,QAAQ,IAAItC,IAAKwC,MAGtBZ,GAGTa,KAAKC,EAAQC,EAAQC,EAAQvE,GAC3B,IAAIwE,EAAcC,EAASC,EAAOC,EAASC,EAAMC,EAAQC,EAczD,OAZAN,EAAeH,EAASC,EACxBG,EAAUD,EAAe,IACzBG,EAAUF,EAAU,GACpBC,EAAQC,EAAU,GAClBC,EAAOF,EAAQ,GACfG,EAASD,EAAO,GAChBE,EAAQD,EAAS,GAEZN,EAAMQ,SAAS,OAClBR,GAAS,KAGJS,KAAKC,MACV,CACET,aAAAA,EACAC,QAAAA,EACAE,QAAAA,EACAD,MAAAA,EACAE,KAAAA,EACAC,OAAAA,EACAC,MAAAA,GACAP,KAINW,QACE,MAAMhE,EAAOO,KAAKC,gBAAgB,IAAIhB,MAAQ+B,MAAM,EAAG,GACvD,OAAO,IAAI/B,QAAQQ,IAGrBiE,IAAG,IACM,IAAIzE,KAGb0E,IAAI7E,EAAM8E,EAAKd,GACbc,EAAMpE,SAASoE,EAAK,IACpB,MAAMnE,EAAO,CAACX,EAAK+E,eAAiBf,IAAUzE,EAAOuF,EAAM,GAAI9E,EAAKgF,YAAchB,IAAUxE,EAAQsF,EAAM,GAAI9E,EAAKiF,WAAajB,IAAUvE,EAAMqF,EAAM,GAAI9E,EAAKkF,YAAclB,IAAUtE,EAAOoF,EAAM,GAAI9E,EAAKmF,cAAgBnB,IAAUrE,EAASmF,EAAM,GAAI9E,EAAKoF,cAAgBpB,IAAUpE,EAASkF,EAAM,GAAI9E,EAAKqF,mBAAqBrB,IAAUnE,EAAciF,EAAM,IACpW,OAAO,IAAI3E,QAAQQ,IAGrB2E,SAAStF,EAAMgE,GACb,MAAMuB,EAAS,CACbhG,CAACA,GAAO,EACRC,CAACA,GAAQ,EACTC,CAACA,GAAM,EACPC,CAACA,GAAO,EACRC,CAACA,GAAS,EACVC,CAACA,GAAS,EACVC,CAACA,GAAc,GAGjB,SAAS2F,EAAaC,GAEpB,OAAOF,EAAOE,IADIF,EAAOvB,GAI3B,MAAMrD,EAAO,CAACX,EAAK+E,cAAeS,EAAajG,GAAQ,EAAIS,EAAKgF,WAAYQ,EAAahG,GAAS,EAAIQ,EAAKiF,UAAWO,EAAa/F,GAAO,EAAIO,EAAKkF,WAAYM,EAAa9F,GAAQ,EAAIM,EAAKmF,aAAcK,EAAa7F,GAAU,EAAIK,EAAKoF,aAAcI,EAAa5F,GAAU,EAAII,EAAKqF,mBAEzR,OAAO,IAAIlF,QAAQQ,IAGrB+E,MAAM1F,GACJ,OAAO,IAAIG,QAAQe,KAAKC,gBAAgBnB,KAG1CmB,gBAAgBnB,GACP,CAACA,EAAK+E,cAAe/E,EAAKgF,WAAYhF,EAAKiF,UAAWjF,EAAKkF,WAAYlF,EAAKmF,aAAcnF,EAAKoF,aAAcpF,EAAKqF,mBAG3HM,kBAAkB3F,GAChB,MAAM4F,EAAa,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAE1D9D,EAAQ9B,EAAKgF,WAEnB,GAAc,IAAVlD,EACF,OAAO8D,EAAW9D,GAIpB,MAAM+D,EAAO7F,EAAK+E,cAClB,OAAKc,EAAO,GAAK,GAAKA,EAAO,KAAO,GAAMA,EAAO,KAAO,EAC/C,GAEF,KAKX,SAASxE,EAAS2B,EAAK8C,EAAcC,GAInC,OAHA/C,GAAY,GACZ8C,IAA+B,EAC/BC,EAAYC,YAA4B,IAAdD,EAA4BA,EAAY,KAC9D/C,EAAIpC,OAASkF,EACRE,OAAOhD,KAEd8C,GAA8B9C,EAAIpC,QACfmF,EAAUnF,SAC3BmF,GAAaA,EAAUE,OAAOH,EAAeC,EAAUnF,SAElDmF,EAAU7D,MAAM,EAAG4D,GAAgBE,OAAOhD,ICzM9C,SAASkD,EAAEC,EAAMC,GACtB,MAAuB,iBAATD,GAAqBC,GAAOC,UAAUC,cAAcH,GAAQA,GAAQ,KAG7E,SAASI,EAAUC,EAAKC,GAC7B,MAAMC,EAAOL,SAASM,gBAAgB,6BAA8BH,GACpE,IAAK,IAAII,KAAQH,EACf,GAAa,cAATG,EAAsB,CACTH,EAAMI,UACdC,YAAYJ,OACD,cAATE,EACTF,EAAKK,UAAYN,EAAMM,UAEvBL,EAAKM,aAAaJ,EAAMH,EAAMG,IAGlC,OAAOF,EAGF,SAASO,EAAWC,EAAYN,EAAMO,EAAMC,GACjD,MAAMC,EAYR,SAA6BH,EAAYN,EAAMO,EAAMC,EAAIE,EAAM,OAAQC,EAAQ,QAC7E,MAAMC,EAASN,EAAWZ,cAAc,WACxC,GAAIkB,EAQF,OAPAtB,EAAEU,KAAKY,EAAQ,CACbC,cAAeb,EACfO,KAAAA,EACAC,GAAAA,EACAE,IAAAA,EACAC,MAAO,WAAaA,IAEfL,EAGT,MAAMQ,EAAiBnB,EAAU,UAAW,CAC1CkB,cAAeb,EACfO,KAAAA,EACAC,GAAAA,EACAE,IAAAA,EACAC,MAAAA,EACAI,SAAU,SACVxF,OAAQgF,EAAO,IAAMC,EACrBQ,SAAU,OACVC,WAAYC,EAAa,cAI3B,OAFAZ,EAAWJ,YAAYY,GAEhBR,EAtCoBa,CAAoBb,EAAYN,EAAMO,EAAMC,GAEvE,GAAIC,IAAuBH,EAAY,CAGrC,MAAMc,EAAQ3B,SAAS4B,YAAY,cACnCD,EAAME,UAAU,SAAS,GAAM,GAC/BF,EAAMG,UAAY,QAClBd,EAAmBe,cAAcJ,IAiCrC,SAASF,EAAaO,GACpB,MAAO,CACLC,KAAM,eACNC,OAAQ,UACR,UAAW,YACX,WAAY,YACZ,cAAe,eACfF,GAGJnC,EAAEsC,GAAK,CAACC,EAAST,EAAOU,EAAUC,KAC3BA,EAIHzC,EAAE0C,SAASH,EAAST,EAAOU,EAAUC,IAHrCA,EAAWD,EACXxC,EAAE2C,KAAKJ,EAAST,EAAOW,KAM3BzC,EAAE4C,IAAM,CAACL,EAAST,EAAOe,KACvBN,EAAQO,oBAAoBhB,EAAOe,IAGrC7C,EAAE2C,KAAO,CAACJ,EAAST,EAAOW,KACxBX,EAAMzH,MAAM,OAAOgD,SAAQ,SAAUyE,GACnCS,EAAQQ,iBAAiBjB,EAAOW,OAIpCzC,EAAE0C,SAAW,CAACH,EAAST,EAAOU,EAAUC,KACtCF,EAAQQ,iBAAiBjB,GAAO,SAAUkB,GACxC,MAAMC,EAAkBD,EAAEE,OAAOC,QAAQX,GACrCS,IACFD,EAAEC,gBAAkBA,EACpBR,EAASW,KAAKpI,KAAMgI,EAAGC,QAK7BjD,EAAEmD,QAAU,CAACX,EAAUD,IAChBA,EAEDA,EAAQc,QAAQb,GACXD,EAGFvC,EAAEmD,QAAQX,EAAUD,EAAQe,YANd,KASvBtD,EAAEU,KAAO,CAAC6B,EAAS7B,EAAMhD,KACvB,IAAKA,GAAyB,iBAATgD,EACnB,OAAO6B,EAAQgB,aAAa7C,GAG9B,GAAoB,iBAATA,EAOX6B,EAAQzB,aAAaJ,EAAMhD,QANzB,IAAK,IAAIJ,KAAOoD,EACdV,EAAEU,KAAK6B,EAASjF,EAAKoD,EAAKpD,KClHjB,MAAMkG,EACnBC,YAAYC,EAAOC,GACjB3I,KAAK4I,aAAaF,EAAOC,GACzB3I,KAAK6I,UACL7I,KAAK8I,OACL9I,KAAK2H,OAGPiB,aAAaF,EAAOC,GAClB3I,KAAK+I,kBAAmB,EACxB/I,KAAK0I,MAAQA,EACb1I,KAAK2I,KAAOA,EAGdE,UACE7I,KAAKgJ,iBACLhJ,KAAKiJ,kBAGPD,iBACEhJ,KAAKkJ,QAAUlJ,KAAK2I,KAAKO,QACzBlJ,KAAKmJ,OAASnJ,KAAK0I,MAAMU,QAAQC,WACjCrJ,KAAKsJ,EAAItJ,KAAKuJ,YACdvJ,KAAKwJ,EAAIxJ,KAAKyJ,YACdzJ,KAAK0J,cAAgB1J,KAAK0I,MAAMU,QAAQO,kBACxC3J,KAAK4J,SAAWhL,EAAW+D,KAAK3C,KAAK2I,KAAKkB,KAAM7J,KAAK2I,KAAKmB,OAAQ,QAAU9J,KAAK0I,MAAMU,QAAQW,KAC/F/J,KAAKgK,MAAQhK,KAAK0I,MAAMU,QAAQa,aAAejK,KAAK4J,SACpD5J,KAAKkK,eAAiBlK,KAAK0I,MAAMU,QAAQa,aAAejK,KAAK4J,UAAY5J,KAAK2I,KAAKwB,SAAW,MAAQ,EACtGnK,KAAKoK,MAAQ/E,EAAU,IAAK,CAC1BgF,MAAO,gBAAkBrK,KAAK2I,KAAK2B,cAAgB,IACnD,UAAWtK,KAAK2I,KAAK4B,KAEvBvK,KAAKwK,UAAYnF,EAAU,IAAK,CAC9BgF,MAAO,YACP1E,UAAW3F,KAAKoK,QAElBpK,KAAKyK,aAAepF,EAAU,IAAK,CACjCgF,MAAO,eACP1E,UAAW3F,KAAKoK,QAIpBnB,kBACEyB,WAAWC,UAAUC,KAAO,WAC1B,OAAQ5K,KAAKuI,aAAa,MAE5BmC,WAAWC,UAAUE,KAAO,WAC1B,OAAQ7K,KAAKuI,aAAa,MAE5BmC,WAAWC,UAAUG,SAAW,WAC9B,OAAQ9K,KAAKuI,aAAa,UAE5BmC,WAAWC,UAAUI,UAAY,WAC/B,OAAQ/K,KAAKuI,aAAa,WAE5BmC,WAAWC,UAAUK,QAAU,WAC7B,OAAOhL,KAAK4K,OAAS5K,KAAK8K,YAI9BhC,OACE9I,KAAKiL,WACLjL,KAAKkL,oBACLlL,KAAKmL,aACLnL,KAAKoL,sBAGPH,WACEjL,KAAKqL,KAAOhG,EAAU,OAAQ,CAC5BiE,EAAGtJ,KAAKsJ,EACRE,EAAGxJ,KAAKwJ,EACRQ,MAAOhK,KAAKgK,MACZb,OAAQnJ,KAAKmJ,OACbmC,GAAItL,KAAK0J,cACT6B,GAAIvL,KAAK0J,cACTW,MAAO,MACP1E,UAAW3F,KAAKwK,YAGlBzE,EAAW/F,KAAKqL,KAAM,QAAS,EAAGrL,KAAKgK,OAEnChK,KAAKkJ,SACPlJ,KAAKqL,KAAKG,UAAU7H,IAAI,eAI5BuH,oBACMlL,KAAKkJ,UACTlJ,KAAKyL,cAAgBpG,EAAU,OAAQ,CACrCiE,EAAGtJ,KAAKsJ,EACRE,EAAGxJ,KAAKwJ,EACRQ,MAAOhK,KAAKkK,eACZf,OAAQnJ,KAAKmJ,OACbmC,GAAItL,KAAK0J,cACT6B,GAAIvL,KAAK0J,cACTW,MAAO,eACP1E,UAAW3F,KAAKwK,YAGlBzE,EAAW/F,KAAKyL,cAAe,QAAS,EAAGzL,KAAKkK,iBAGlDiB,aACE9F,EAAU,OAAQ,CAChBiE,EAAGtJ,KAAKsJ,EAAItJ,KAAKgK,MAAQ,EACzBR,EAAGxJ,KAAKwJ,EAAIxJ,KAAKmJ,OAAS,EAC1BtD,UAAW7F,KAAK2I,KAAKxB,KACrBkD,MAAO,YACP1E,UAAW3F,KAAKwK,YAGlBkB,uBAAsB,IAAM1L,KAAK2L,0BAGnCP,sBACE,GAAIpL,KAAKkJ,QAAS,OAElB,MAAM0C,EAAM5L,KAAKqL,KAGjBhG,EAAU,OAAQ,CAChBiE,EAAGsC,EAAIhB,OAASgB,EAAId,WAAa,EACjCtB,EAAGoC,EAAIf,OAAS,EAChBb,MALmB,EAMnBb,OAAQnJ,KAAKmJ,OAAS,EACtBmC,GAAItL,KAAK0J,cACT6B,GAAIvL,KAAK0J,cACTW,MAAO,eACP1E,UAAW3F,KAAKyK,eAGlBpF,EAAU,OAAQ,CAChBiE,EAAGsC,EAAIhB,OAAS,EAChBpB,EAAGoC,EAAIf,OAAS,EAChBb,MAhBmB,EAiBnBb,OAAQnJ,KAAKmJ,OAAS,EACtBmC,GAAItL,KAAK0J,cACT6B,GAAIvL,KAAK0J,cACTW,MAAO,cACP1E,UAAW3F,KAAKyK,eAGdzK,KAAK2I,KAAKwB,UAAYnK,KAAK2I,KAAKwB,SAAW,MAC7CnK,KAAK6L,iBAAmBxG,EAAU,UAAW,CAC3CyG,OAAQ9L,KAAK+L,8BAA8BC,KAAK,KAChD3B,MAAO,kBACP1E,UAAW3F,KAAKyK,gBAKtBsB,8BACE,MAAME,EAAejM,KAAKyL,cAC1B,MAAO,CAACQ,EAAajB,UAAY,EAAGiB,EAAapB,OAASoB,EAAalB,YAAakB,EAAajB,UAAY,EAAGiB,EAAapB,OAASoB,EAAalB,YAAakB,EAAajB,UAAWiB,EAAapB,OAASoB,EAAalB,YAAc,MAG3OpD,OACM3H,KAAKkJ,SACTlJ,KAAKkM,oBAGPA,oBACElH,EAAEsC,GAAGtH,KAAKoK,MAAO,SAAWpK,KAAK0I,MAAMU,QAAQ+C,eAAgBnE,IACzDhI,KAAK+I,mBAKT/I,KAAKoM,aACLpM,KAAK0I,MAAM2D,eACXrM,KAAKoK,MAAMoB,UAAU7H,IAAI,cAG3BqB,EAAEsC,GAAGtH,KAAKoK,MAAO,YAAapC,IACxBhI,KAAK+I,kBAKT/I,KAAK0I,MAAM4D,cAAc,QAAS,CAACtM,KAAK2I,UAI5CyD,aACE,GAAIpM,KAAK0I,MAAM6D,kBAAmB,OAElC,MAEMC,EAFa5N,EAAW0B,OAAON,KAAK2I,KAAKmB,OAAQ,QAAS9J,KAAK0I,MAAMU,QAAQqD,UAErD,MADb7N,EAAW0B,OAAO1B,EAAW+E,IAAI3D,KAAK2I,KAAKkB,MAAO,EAAG,UAAW,QAAS7J,KAAK0I,MAAMU,QAAQqD,UAG7GzM,KAAK0I,MAAM0D,WAAW,CACpBM,eAAgB1M,KAAKqL,KACrBsB,MAAO3M,KAAK2I,KAAKxB,KACjBqF,SAAUA,EACV7D,KAAM3I,KAAK2I,OAIfiE,qBAAoBtD,EAAEA,EAAI,KAAIU,MAAEA,EAAQ,OACtC,MAAM4B,EAAM5L,KAAKqL,KACjB,GAAI/B,EAAG,CASL,IAPWtJ,KAAK2I,KAAKkE,aAAavN,KAAKwN,GAC9B9M,KAAK0I,MAAMqE,QAAQD,GAAKzB,KAAKT,SAGnBoC,QAAO,CAACC,EAAMC,IACxB5D,GAAK4D,GACX5D,GAGD,YADAU,EAAQ,MAGVhK,KAAKmN,YAAYvB,EAAK,IAAKtC,GAEzBU,GAASA,GAAShK,KAAK0I,MAAMU,QAAQa,cACvCjK,KAAKmN,YAAYvB,EAAK,QAAS5B,GAEjChK,KAAK2L,wBACL3L,KAAKoN,yBACLpN,KAAKqN,8BACLrN,KAAKsN,wBAGPC,eACE,IAAIC,GAAU,EACd,MAAMC,eAAEA,EAAcC,aAAEA,GAAiB1N,KAAK2N,yBAE1CC,OAAO5N,KAAK2I,KAAKmB,UAAY8D,OAAOH,KACtCD,GAAU,EACVxN,KAAK2I,KAAKmB,OAAS2D,GAGjBG,OAAO5N,KAAK2I,KAAKkB,QAAU+D,OAAOF,KACpCF,GAAU,EACVxN,KAAK2I,KAAKkB,KAAO6D,GAGdF,GAELxN,KAAK0I,MAAM4D,cAAc,cAAe,CAACtM,KAAK2I,KAAM8E,EAAgB7O,EAAW+E,IAAI+J,GAAe,EAAG,YAGvGG,mBACE,MAAMC,EAAe9N,KAAK+N,mBAC1B/N,KAAK2I,KAAKwB,SAAW2D,EACrB9N,KAAK0I,MAAM4D,cAAc,kBAAmB,CAACtM,KAAK2I,KAAMmF,IAG1DE,uBACEhO,KAAK+I,kBAAmB,EACxBkF,YAAW,IAAOjO,KAAK+I,kBAAmB,GAAQ,KAGpD4E,yBACE,MAAM/B,EAAM5L,KAAKqL,KACX6C,EAAatC,EAAIhB,OAAS5K,KAAK0I,MAAMU,QAAQa,aAC7CwD,EAAiB7O,EAAW+E,IAAI3D,KAAK0I,MAAMyF,YAAaD,EAAalO,KAAK0I,MAAMU,QAAQW,KAAM,QAC9FqE,EAAiBxC,EAAId,WAAa9K,KAAK0I,MAAMU,QAAQa,aAG3D,MAAO,CAAEwD,eAAAA,EAAgBC,aAFJ9O,EAAW+E,IAAI8J,EAAgBW,EAAiBpO,KAAK0I,MAAMU,QAAQW,KAAM,SAKhGgE,mBACE,MAAM5D,EAAYnK,KAAKyL,cAAcX,WAAa9K,KAAKqL,KAAKP,WAAc,IAC1E,OAAOtL,SAAS2K,EAAU,IAG5BZ,YACE,MAAMQ,KAAEA,EAAIE,aAAEA,GAAiBjK,KAAK0I,MAAMU,QACpCiF,EAAarO,KAAK2I,KAAKmB,OACvBqE,EAAcnO,KAAK0I,MAAMyF,YAG/B,IAAI7E,EADS1K,EAAW+D,KAAK0L,EAAYF,EAAa,QACtCpE,EAAQE,EAExB,GAAIjK,KAAK0I,MAAM4F,QAAQ,SAAU,CAE/BhF,EADa1K,EAAW+D,KAAK0L,EAAYF,EAAa,OAC1ClE,EAAgB,GAE9B,OAAOX,EAGTG,YACE,OAAOzJ,KAAK0I,MAAMU,QAAQmF,cAAgBvO,KAAK0I,MAAMU,QAAQoF,QAAUxO,KAAK2I,KAAK8F,QAAUzO,KAAKmJ,OAASnJ,KAAK0I,MAAMU,QAAQoF,SAG9HE,kBAAkBC,GAChB,IACEC,EACAC,EAFEC,EAAMH,EAcV,OAVI3O,KAAK0I,MAAM4F,QAAQ,SACrBM,EAAMD,GAAM3O,KAAK0I,MAAMU,QAAQa,aAAe,GAC9C4E,EAAWC,EAAMF,GAAOA,EAAM5O,KAAK0I,MAAMU,QAAQa,aAAe,GAAK,EAAIjK,KAAK0I,MAAMU,QAAQa,aAAe,IAClGjK,KAAK0I,MAAM4F,QAAQ,UAC5BM,EAAMD,GAAM3O,KAAK0I,MAAMU,QAAQa,aAAe,IAC9C4E,EAAWC,EAAMF,GAAOA,EAAM5O,KAAK0I,MAAMU,QAAQa,aAAe,GAAK,EAAIjK,KAAK0I,MAAMU,QAAQa,aAAe,MAE3G2E,EAAMD,EAAK3O,KAAK0I,MAAMU,QAAQa,aAC9B4E,EAAWC,EAAMF,GAAOA,EAAM5O,KAAK0I,MAAMU,QAAQa,aAAe,EAAI,EAAIjK,KAAK0I,MAAMU,QAAQa,eAEtF4E,EAGT1B,YAAY5F,EAAS7B,EAAMhD,GAKzB,OAJAA,GAASA,EACJqM,MAAMrM,IACT6E,EAAQzB,aAAaJ,EAAMhD,GAEtB6E,EAGT8F,8BACMrN,KAAKkJ,UACTlJ,KAAKyL,cAAc3F,aAAa,IAAK9F,KAAKqL,KAAKT,QAC/C5K,KAAKyL,cAAc3F,aAAa,QAAS9F,KAAKqL,KAAKP,YAAc9K,KAAK2I,KAAKwB,SAAW,OAGxFwB,wBACE,MAAMC,EAAM5L,KAAKqL,KACf2D,EAAQhP,KAAKoK,MAAMhF,cAAc,cAE/B4J,EAAMC,UAAUjF,MAAQ4B,EAAId,YAC9BkE,EAAMxD,UAAU7H,IAAI,OACpBqL,EAAMlJ,aAAa,IAAK8F,EAAIhB,OAASgB,EAAId,WAAa,KAEtDkE,EAAMxD,UAAU0D,OAAO,OACvBF,EAAMlJ,aAAa,IAAK8F,EAAIhB,OAASgB,EAAId,WAAa,IAI1DsC,yBACE,GAAIpN,KAAKkJ,QAAS,OAClB,MAAM0C,EAAM5L,KAAKqL,KACjBrL,KAAKyK,aAAarF,cAAc,gBAAgBU,aAAa,IAAK8F,EAAIhB,OAAS,GAC/E5K,KAAKyK,aAAarF,cAAc,iBAAiBU,aAAa,IAAK8F,EAAIZ,UAAY,GACnF,MAAMmE,EAASnP,KAAKoK,MAAMhF,cAAc,oBACxC+J,GAAUA,EAAOrJ,aAAa,SAAU9F,KAAK+L,+BAG/CuB,wBACEtN,KAAKoP,OAASpP,KAAKoP,QAAU,GAC7B,IAAK,IAAIC,KAASrP,KAAKoP,OACrBC,EAAMC,UC1VG,MAAMC,EACnB9G,YAAYC,EAAO8G,EAAWC,GAC5BzP,KAAK0I,MAAQA,EACb1I,KAAKwP,UAAYA,EACjBxP,KAAKyP,QAAUA,EAEfzP,KAAK0P,iBACL1P,KAAK8I,OAGP4G,iBACE,IAAIC,EAAU3P,KAAKwP,UAAUnE,KAAKT,OAAS5K,KAAKwP,UAAUnE,KAAKP,WAAa,EAE5E,MAAM8E,EAAY,IAAM5P,KAAKyP,QAAQpE,KAAKT,OAAS+E,EAAU3P,KAAK0I,MAAMU,QAAQoF,SAAWmB,EAAU3P,KAAKwP,UAAUnE,KAAKT,OAAS5K,KAAK0I,MAAMU,QAAQoF,QAErJ,KAAOoB,KACLD,GAAW,GAGb,MAAME,EAAU7P,KAAK0I,MAAMU,QAAQmF,cAAgBvO,KAAK0I,MAAMU,QAAQC,YAAcrJ,KAAK0I,MAAMU,QAAQoF,QAAUxO,KAAK0I,MAAMU,QAAQC,YAAcrJ,KAAKwP,UAAU7G,KAAK8F,OAASzO,KAAK0I,MAAMU,QAAQoF,QAE5LsB,EAAQ9P,KAAKyP,QAAQpE,KAAKT,OAAS5K,KAAK0I,MAAMU,QAAQoF,QAAU,EAChEuB,EAAQ/P,KAAK0I,MAAMU,QAAQmF,cAAgBvO,KAAK0I,MAAMU,QAAQC,WAAa,GAAKrJ,KAAK0I,MAAMU,QAAQoF,QAAUxO,KAAK0I,MAAMU,QAAQC,YAAcrJ,KAAKyP,QAAQ9G,KAAK8F,OAASzO,KAAK0I,MAAMU,QAAQoF,QAE5LwB,EAAmBhQ,KAAKwP,UAAU7G,KAAK8F,OAASzO,KAAKyP,QAAQ9G,KAAK8F,OAClEwB,EAAQjQ,KAAK0I,MAAMU,QAAQ8G,YAC3BC,EAAYH,EAAmB,EAAI,EACnCI,EAAUJ,GAAoBC,EAAQA,EACtCI,EAASL,EAAmBD,EAAQ/P,KAAK0I,MAAMU,QAAQ8G,YAAcH,EAAQ/P,KAAK0I,MAAMU,QAAQ8G,YAWtG,GATAlQ,KAAKsQ,KAAO,mBACAX,KAAWE,oBACXQ,oBACAJ,KAASA,SAAaE,KAAaF,KAASG,oBAC5CN,KAASC,gEAKjB/P,KAAKyP,QAAQpE,KAAKT,OAAS5K,KAAKwP,UAAUnE,KAAKT,OAAS5K,KAAK0I,MAAMU,QAAQoF,QAAS,CACtF,MAAM+B,EAASvQ,KAAK0I,MAAMU,QAAQoF,QAAU,EAAIyB,EAC1CO,EAASxQ,KAAKyP,QAAQpE,KAAKR,OAAS7K,KAAKyP,QAAQpE,KAAKN,YAAc,EAAIqF,EACxEK,EAAOzQ,KAAKyP,QAAQpE,KAAKT,OAAS5K,KAAK0I,MAAMU,QAAQoF,QAE3DxO,KAAKsQ,KAAO,uBACEX,KAAWE,wBACXU,wBACAN,KAASA,YAAgBA,KAASA,wBAClCQ,wBACAR,KAASA,SAAaE,MAAcF,KAASG,wBAC7CI,wBACAP,KAASA,SAAaE,KAAaF,KAASG,wBAC5CN,KAASC,6EAO3BjH,OACE9I,KAAKuH,QAAUlC,EAAU,OAAQ,CAC/BnE,EAAGlB,KAAKsQ,KACR,YAAatQ,KAAKwP,UAAU7G,KAAK4B,GACjC,UAAWvK,KAAKyP,QAAQ9G,KAAK4B,KAIjC+E,SACEtP,KAAK0P,iBACL1P,KAAKuH,QAAQzB,aAAa,IAAK9F,KAAKsQ,OCvEzB,MAAMI,EACnBjI,YAAYkI,EAAQC,GAClB5Q,KAAK2Q,OAASA,EACd3Q,KAAK4Q,YAAcA,EACnB5Q,KAAK6Q,OAGPA,OACE7Q,KAAK2Q,OAAO9K,UAAY,uGAMxB7F,KAAK8Q,OAEL9Q,KAAK2M,MAAQ3M,KAAK2Q,OAAOvL,cAAc,UACvCpF,KAAKwM,SAAWxM,KAAK2Q,OAAOvL,cAAc,aAC1CpF,KAAK+Q,QAAU/Q,KAAK2Q,OAAOvL,cAAc,YAG3C4L,KAAK5H,GACH,IAAKA,EAAQsD,eACX,MAAM,IAAIuE,MAAM,4CAEb7H,EAAQyF,WACXzF,EAAQyF,SAAW,QAErB,MAAMnC,EAAiBtD,EAAQsD,eAE/B,GAAI1M,KAAK4Q,YAAa,CACpB,IAAIM,EAAOlR,KAAK4Q,YAAYxH,EAAQT,MACpCuI,GAAQ,8BACRlR,KAAK2Q,OAAO9K,UAAYqL,EACxBlR,KAAK+Q,QAAU/Q,KAAK2Q,OAAOvL,cAAc,iBAGzCpF,KAAK2M,MAAM9G,UAAYuD,EAAQuD,MAC/B3M,KAAKwM,SAAS3G,UAAYuD,EAAQoD,SAClCxM,KAAK2Q,OAAOQ,MAAMnH,MAAQhK,KAAK2Q,OAAOS,YAAc,KAItD,IAAIC,EACA3E,aAA0B4E,YAC5BD,EAAgB3E,EAAe6E,wBACtB7E,aAA0BhC,aACnC2G,EAAgBjI,EAAQsD,eAAeuC,WAGhB,SAArB7F,EAAQyF,WACV7O,KAAK2Q,OAAOQ,MAAMV,KAAOY,EAAc/H,GAAK+H,EAAcrH,MAAQ,IAAM,KACxEhK,KAAK2Q,OAAOQ,MAAMK,IAAMH,EAAc7H,EAAI,KAE1CxJ,KAAK+Q,QAAQI,MAAMM,UAAY,iBAC/BzR,KAAK+Q,QAAQI,MAAMV,KAAO,OAC1BzQ,KAAK+Q,QAAQI,MAAMK,IAAM,OAI3BxR,KAAK2Q,OAAOQ,MAAMO,QAAU,EAG9BZ,OACE9Q,KAAK2Q,OAAOQ,MAAMO,QAAU,EAC5B1R,KAAK2Q,OAAOQ,MAAMV,KAAO,GCzD7B,MAAMkB,EAAY,CAChBC,YAAa,cACbC,SAAU,WACVtT,IAAK,MACLuT,KAAM,OACNxT,MAAO,QACPD,KAAM,QAGO,MAAM0T,EACnBtJ,YAAYuJ,EAASC,EAAO7I,GAC1BpJ,KAAKkS,cAAcF,GACnBhS,KAAKmS,cAAc/I,GACnBpJ,KAAKoS,YAAYH,GAEjBjS,KAAKqS,mBACLrS,KAAKsS,cAGPJ,cAAc3K,GACZ,IAAIgL,EAAaC,EAQjB,GALuB,iBAAZjL,IACTA,EAAUpC,SAASC,cAAcmC,IAI/BA,aAAmB+J,YACrBkB,EAAkBjL,EAClBgL,EAAchL,EAAQnC,cAAc,WAC/B,CAAA,KAAImC,aAAmBmD,YAG5B,MAAM,IAAI3K,UAAU,8HAFpBwS,EAAchL,EAMXgL,GAOHvS,KAAKyS,KAAOF,EACZvS,KAAKyS,KAAKjH,UAAU7H,IAAI,UANxB3D,KAAKyS,KAAOpN,EAAU,MAAO,CAC3BM,UAAW6M,EACXnI,MAAO,UAQXrK,KAAK0S,WAAavN,SAASwN,cAAc,OACzC3S,KAAK0S,WAAWlH,UAAU7H,IAAI,mBAEP3D,KAAKyS,KAAKG,cAClBhN,YAAY5F,KAAK0S,YAChC1S,KAAK0S,WAAW9M,YAAY5F,KAAKyS,MAGjCzS,KAAK6S,cAAgB1N,SAASwN,cAAc,OAC5C3S,KAAK6S,cAAcrH,UAAU7H,IAAI,iBACjC3D,KAAK0S,WAAW9M,YAAY5F,KAAK6S,eAGnCV,cAAc/I,GACZ,MAAM0J,EAAkB,CACtBvE,cAAe,GACftE,aAAc,GACdF,KAAM,GACNgJ,WAAY,IAAI/Q,OAAOf,OAAO0Q,IAC9BtI,WAAY,GACZM,kBAAmB,EACnBuG,YAAa,EACb1B,QAAS,GACTwE,UAAW,MACXC,YAAa,aACb9G,cAAe,QACf+G,kBAAmB,KACnBzG,SAAU,MAEZzM,KAAKoJ,QAAUpH,OAAOmR,OAAO,GAAIL,EAAiB1J,GAGpDgJ,YAAYH,GAEVjS,KAAKiS,MAAQA,EAAM3S,KAAI,CAACqJ,EAAMzI,KAc5B,GAZAyI,EAAKmB,OAASlL,EAAWC,MAAM8J,EAAKyK,OACpCzK,EAAKkB,KAAOjL,EAAWC,MAAM8J,EAAK0K,KAG9BzU,EAAW+D,KAAKgG,EAAKkB,KAAMlB,EAAKmB,OAAQ,QAAU,KACpDnB,EAAK0K,IAAM,MAIb1K,EAAK8F,OAASvO,GAGTyI,EAAKyK,QAAUzK,EAAK0K,IAAK,CAC5B,MAAM5P,EAAQ7E,EAAW6E,QACzBkF,EAAKmB,OAASrG,EACdkF,EAAKkB,KAAOjL,EAAW+E,IAAIF,EAAO,EAAG,QAGlCkF,EAAKyK,OAASzK,EAAK0K,MACtB1K,EAAKmB,OAASlL,EAAW+E,IAAIgF,EAAKkB,MAAO,EAAG,QAG1ClB,EAAKyK,QAAUzK,EAAK0K,MACtB1K,EAAKkB,KAAOjL,EAAW+E,IAAIgF,EAAKmB,OAAQ,EAAG,QAgB7C,GAXwBlL,EAAWqB,gBAAgB0I,EAAKkB,MACpC7I,MAAM,GAAGsS,OAAOpS,GAAY,IAANA,MACxCyH,EAAKkB,KAAOjL,EAAW+E,IAAIgF,EAAKkB,KAAM,GAAI,SAIvClB,EAAKyK,OAAUzK,EAAK0K,MACvB1K,EAAKO,SAAU,GAIgB,iBAAtBP,EAAKkE,eAA8BlE,EAAKkE,aAAc,CAC/D,IAAI0G,EAAO,GACP5K,EAAKkE,eACP0G,EAAO5K,EAAKkE,aACTxN,MAAM,KACNC,KAAK4B,GAAMA,EAAEsS,SACbC,QAAQvS,GAAMA,KAEnByH,EAAKkE,aAAe0G,EAQtB,OAJK5K,EAAK4B,KACR5B,EAAK4B,GAiqBb,SAAqB5B,GACnB,OAAOA,EAAKxB,KAAO,IAAM5D,KAAKmQ,SAASC,SAAS,IAAI3S,MAAM,EAAG,IAlqB7C4S,CAAYjL,IAGjBA,KAGT3I,KAAK6T,qBAGPA,qBACE7T,KAAK8T,eAAiB,GACtB,IAAK,IAAIC,KAAK/T,KAAKiS,MACjB,IAAK,IAAI/Q,KAAK6S,EAAElH,aACd7M,KAAK8T,eAAe5S,GAAKlB,KAAK8T,eAAe5S,IAAM,GACnDlB,KAAK8T,eAAe5S,GAAGuB,KAAKsR,EAAExJ,IAKpCyJ,QAAQ/B,GACNjS,KAAKoS,YAAYH,GACjBjS,KAAKqS,mBAGPA,iBAAiB4B,EAAOjU,KAAKoJ,QAAQ4J,WACnChT,KAAKkU,kBAAkBD,GACvBjU,KAAKmU,cACLnU,KAAKoU,SAELpU,KAAKsM,cAAc,cAAe,CAAC2H,IAGrCC,kBAAkBlB,GAChBhT,KAAKoJ,QAAQ4J,UAAYA,EAErBA,IAAcrB,EAAUpT,KAC1ByB,KAAKoJ,QAAQW,KAAO,GACpB/J,KAAKoJ,QAAQa,aAAe,IACnB+I,IAAcrB,EAAUE,UACjC7R,KAAKoJ,QAAQW,KAAO,GACpB/J,KAAKoJ,QAAQa,aAAe,IACnB+I,IAAcrB,EAAUC,aACjC5R,KAAKoJ,QAAQW,KAAO,EACpB/J,KAAKoJ,QAAQa,aAAe,IACnB+I,IAAcrB,EAAUG,MACjC9R,KAAKoJ,QAAQW,KAAO,IACpB/J,KAAKoJ,QAAQa,aAAe,KACnB+I,IAAcrB,EAAUrT,OACjC0B,KAAKoJ,QAAQW,KAAO,IACpB/J,KAAKoJ,QAAQa,aAAe,KACnB+I,IAAcrB,EAAUtT,OACjC2B,KAAKoJ,QAAQW,KAAO,KACpB/J,KAAKoJ,QAAQa,aAAe,KAIhCkK,cACEnU,KAAKqU,oBACLrU,KAAKsU,oBAGPD,oBACErU,KAAKmO,YAAcnO,KAAKuU,UAAY,KAEpC,IAAK,IAAI5L,KAAQ3I,KAAKiS,QAEfjS,KAAKmO,aAAexF,EAAKmB,OAAS9J,KAAKmO,eAC1CnO,KAAKmO,YAAcxF,EAAKmB,UAErB9J,KAAKuU,WAAa5L,EAAKkB,KAAO7J,KAAKuU,aACtCvU,KAAKuU,UAAY5L,EAAKkB,MAI1B7J,KAAKmO,YAAcvP,EAAWwF,SAASpE,KAAKmO,YAAa,OACzDnO,KAAKuU,UAAY3V,EAAWwF,SAASpE,KAAKuU,UAAW,OAGjDvU,KAAKsO,QAAQ,CAACqD,EAAUC,YAAaD,EAAUE,YACjD7R,KAAKmO,YAAcvP,EAAW+E,IAAI3D,KAAKmO,aAAc,EAAG,OACxDnO,KAAKuU,UAAY3V,EAAW+E,IAAI3D,KAAKuU,UAAW,EAAG,QAC1CvU,KAAKsO,QAAQqD,EAAUrT,QAChC0B,KAAKmO,YAAcvP,EAAWwF,SAASpE,KAAKmO,YAAa,QACzDnO,KAAKuU,UAAY3V,EAAW+E,IAAI3D,KAAKuU,UAAW,EAAG,SAC1CvU,KAAKsO,QAAQqD,EAAUtT,OAChC2B,KAAKmO,YAAcvP,EAAW+E,IAAI3D,KAAKmO,aAAc,EAAG,QACxDnO,KAAKuU,UAAY3V,EAAW+E,IAAI3D,KAAKuU,UAAW,EAAG,UAEnDvU,KAAKmO,YAAcvP,EAAW+E,IAAI3D,KAAKmO,aAAc,EAAG,SACxDnO,KAAKuU,UAAY3V,EAAW+E,IAAI3D,KAAKuU,UAAW,EAAG,UAIvDD,oBACEtU,KAAKwU,MAAQ,GACb,IAAIC,EAAW,KAEf,KAAoB,OAAbA,GAAqBA,EAAWzU,KAAKuU,WAKtCE,EAJCA,EAGCzU,KAAKsO,QAAQqD,EAAUtT,MACdO,EAAW+E,IAAI8Q,EAAU,EAAG,QAC9BzU,KAAKsO,QAAQqD,EAAUrT,OACrBM,EAAW+E,IAAI8Q,EAAU,EAAG,SAE5B7V,EAAW+E,IAAI8Q,EAAUzU,KAAKoJ,QAAQW,KAAM,QAP9CnL,EAAW4F,MAAMxE,KAAKmO,aAUnCnO,KAAKwU,MAAM/R,KAAKgS,GAIpBnC,cACEtS,KAAK0U,kBACL1U,KAAK2U,kBAGPP,SACEpU,KAAK4U,QACL5U,KAAK6U,eACL7U,KAAK8U,YACL9U,KAAK+U,aACL/U,KAAKgV,YACLhV,KAAKiV,cACLjV,KAAKkV,qBACLlV,KAAKmV,YACLnV,KAAKoV,sBAGPP,eACE7U,KAAKqV,OAAS,GACd,MAAMA,EAAS,CAAC,OAAQ,OAAQ,QAAS,WAAY,MAAO,WAE5D,IAAK,IAAIC,KAASD,EAChBrV,KAAKqV,OAAOC,GAASjQ,EAAU,IAAK,CAClCgF,MAAOiL,EACP3P,UAAW3F,KAAKyS,OAKtBqC,YACE9U,KAAKuV,uBACLvV,KAAKwV,iBACLxV,KAAKyV,mBACLzV,KAAK0V,kBACL1V,KAAK2V,uBAGPJ,uBACE,MAAMK,EAAa5V,KAAKwU,MAAM9U,OAASM,KAAKoJ,QAAQa,aAC9C4L,EAAc7V,KAAKoJ,QAAQmF,cAAgBvO,KAAKoJ,QAAQoF,SAAWxO,KAAKoJ,QAAQC,WAAarJ,KAAKoJ,QAAQoF,SAAWxO,KAAKiS,MAAMvS,OAEtI2F,EAAU,OAAQ,CAChBiE,EAAG,EACHE,EAAG,EACHQ,MAAO4L,EACPzM,OAAQ0M,EACRxL,MAAO,kBACP1E,UAAW3F,KAAKqV,OAAOS,OAGzB9Q,EAAEU,KAAK1F,KAAKyS,KAAM,CAChBtJ,OAAQ0M,EAAc7V,KAAKoJ,QAAQoF,QAAU,IAC7CxE,MAAO,SAIXwL,iBACE,MAAMO,EAAa1Q,EAAU,IAAK,CAAEM,UAAW3F,KAAKqV,OAAOS,OACrDE,EAAc3Q,EAAU,IAAK,CAAEM,UAAW3F,KAAKqV,OAAOS,OAEtDG,EAAYjW,KAAKwU,MAAM9U,OAASM,KAAKoJ,QAAQa,aAC7CiM,EAAalW,KAAKoJ,QAAQC,WAAarJ,KAAKoJ,QAAQoF,QAE1D,IAAI2H,EAAQnW,KAAKoJ,QAAQmF,cAAgBvO,KAAKoJ,QAAQoF,QAAU,EAEhE,IAAK,IAAI7F,KAAQ3I,KAAKiS,MACpB5M,EAAU,OAAQ,CAChBiE,EAAG,EACHE,EAAG2M,EACHnM,MAAOiM,EACP9M,OAAQ+M,EACR7L,MAAO,WACP1E,UAAWoQ,IAGb1Q,EAAU,OAAQ,CAChB+Q,GAAI,EACJC,GAAIF,EAAQD,EACZI,GAAIL,EACJM,GAAIJ,EAAQD,EACZ7L,MAAO,WACP1E,UAAWqQ,IAGbG,GAASnW,KAAKoJ,QAAQC,WAAarJ,KAAKoJ,QAAQoF,QAIpDiH,mBAGEpQ,EAAU,OAAQ,CAChBiE,EAAG,EACHE,EAAG,EACHQ,MALmBhK,KAAKwU,MAAM9U,OAASM,KAAKoJ,QAAQa,aAMpDd,OALoBnJ,KAAKoJ,QAAQmF,cAAgB,GAMjDlE,MAAO,cACP1E,UAAW3F,KAAKqV,OAAOS,OAI3BJ,kBACE,IAAIc,EAAS,EACTC,EAASzW,KAAKoJ,QAAQmF,cAAgBvO,KAAKoJ,QAAQoF,QAAU,EAC7DkI,GAAe1W,KAAKoJ,QAAQC,WAAarJ,KAAKoJ,QAAQoF,SAAWxO,KAAKiS,MAAMvS,OAEhF,IAAK,IAAIZ,KAAQkB,KAAKwU,MAAO,CAC3B,IAAImC,EAAa,OAEb3W,KAAKsO,QAAQqD,EAAUpT,MAA2B,IAAnBO,EAAKiF,YACtC4S,GAAc,UAGZ3W,KAAKsO,QAAQqD,EAAUG,OAAShT,EAAKiF,WAAa,GAAKjF,EAAKiF,UAAY,IAC1E4S,GAAc,UAGZ3W,KAAKsO,QAAQqD,EAAUrT,QAAUQ,EAAKgF,WAAa,GAAM,IAC3D6S,GAAc,UAGhBtR,EAAU,OAAQ,CAChBnE,EAAG,KAAKsV,KAAUC,OAAYC,IAC9BrM,MAAOsM,EACPhR,UAAW3F,KAAKqV,OAAOS,OAGrB9V,KAAKsO,QAAQqD,EAAUrT,OACzBkY,GAAW5X,EAAW6F,kBAAkB3F,GAAQkB,KAAKoJ,QAAQa,aAAgB,GAE7EuM,GAAUxW,KAAKoJ,QAAQa,cAK7B0L,uBAEE,GAAI3V,KAAKsO,QAAQqD,EAAUpT,KAAM,CAO/B8G,EAAU,OAAQ,CAChBiE,EAPS1K,EAAW+D,KAAK/D,EAAW6E,QAASzD,KAAKmO,YAAa,QAAUnO,KAAKoJ,QAAQW,KAAQ/J,KAAKoJ,QAAQa,aAQ3GT,EAPQ,EAQRQ,MANYhK,KAAKoJ,QAAQa,aAOzBd,QANcnJ,KAAKoJ,QAAQC,WAAarJ,KAAKoJ,QAAQoF,SAAWxO,KAAKiS,MAAMvS,OAASM,KAAKoJ,QAAQmF,cAAgBvO,KAAKoJ,QAAQoF,QAAU,EAOxInE,MAAO,kBACP1E,UAAW3F,KAAKqV,OAAOS,QAK7Bf,aACE,IAAK,IAAIjW,KAAQkB,KAAK4W,oBASpB,GARAvR,EAAU,OAAQ,CAChBiE,EAAGxK,EAAK+X,QACRrN,EAAG1K,EAAKgY,QACRjR,UAAW/G,EAAKiY,WAChB1M,MAAO,aACP1E,UAAW3F,KAAKqV,OAAOvW,OAGrBA,EAAKkY,WAAY,CACnB,MAAMC,EAAc5R,EAAU,OAAQ,CACpCiE,EAAGxK,EAAKoY,QACR1N,EAAG1K,EAAKqY,QACRtR,UAAW/G,EAAKkY,WAChB3M,MAAO,aACP1E,UAAW3F,KAAKqV,OAAOvW,OAIrBmY,EAAYhI,UAAUqH,GAAKtW,KAAKqV,OAAOS,KAAK7G,UAAUjF,OACxDiN,EAAY/H,UAMpB0H,oBACE,IAAIQ,EAAY,KAMhB,OALcpX,KAAKwU,MAAMlV,KAAI,CAACR,EAAMoB,KAClC,MAAMgB,EAAIlB,KAAKqX,cAAcvY,EAAMsY,EAAWlX,GAE9C,OADAkX,EAAYtY,EACLoC,KAKXmW,cAAcvY,EAAMsY,EAAWlX,GACxBkX,IACHA,EAAYxY,EAAW+E,IAAI7E,EAAM,EAAG,SAEtC,MAAMwY,EAAY,CAChB,oBAAqB1Y,EAAW0B,OAAOxB,EAAM,KAAMkB,KAAKoJ,QAAQqD,UAChE,iBAAkB7N,EAAW0B,OAAOxB,EAAM,KAAMkB,KAAKoJ,QAAQqD,UAC7D8K,UAAWzY,EAAKiF,YAAcqT,EAAUrT,UAAYnF,EAAW0B,OAAOxB,EAAM,IAAKkB,KAAKoJ,QAAQqD,UAAY,GAC1G+K,WAAY1Y,EAAKgF,aAAesT,EAAUtT,WAAalF,EAAW0B,OAAOxB,EAAM,QAASkB,KAAKoJ,QAAQqD,UAAY7N,EAAW0B,OAAOxB,EAAM,IAAKkB,KAAKoJ,QAAQqD,UAC3JgL,YAAa7Y,EAAW0B,OAAOxB,EAAM,OAAQkB,KAAKoJ,QAAQqD,UAC1DiL,WAAY9Y,EAAW0B,OAAOxB,EAAM,OAAQkB,KAAKoJ,QAAQqD,UACzD,oBAAqB3N,EAAKiF,YAAcqT,EAAUrT,UAAYnF,EAAW0B,OAAOxB,EAAM,QAASkB,KAAKoJ,QAAQqD,UAAY,GACxH,iBAAkB3N,EAAKiF,YAAcqT,EAAUrT,UAAajF,EAAKgF,aAAesT,EAAUtT,WAAalF,EAAW0B,OAAOxB,EAAM,QAASkB,KAAKoJ,QAAQqD,UAAY7N,EAAW0B,OAAOxB,EAAM,IAAKkB,KAAKoJ,QAAQqD,UAAa,GACxNkL,UAAW7Y,EAAKgF,aAAesT,EAAUtT,WAAalF,EAAW0B,OAAOxB,EAAM,OAAQkB,KAAKoJ,QAAQqD,UAAY,GAC/GmL,WAAY9Y,EAAKgF,aAAesT,EAAUtT,WAAalF,EAAW0B,OAAOxB,EAAM,OAAQkB,KAAKoJ,QAAQqD,UAAY,GAChHoL,YAAa/Y,EAAK+E,gBAAkBuT,EAAUvT,cAAgBjF,EAAW0B,OAAOxB,EAAM,OAAQkB,KAAKoJ,QAAQqD,UAAY,GACvHqL,WAAYhZ,EAAK+E,gBAAkBuT,EAAUvT,cAAgBjF,EAAW0B,OAAOxB,EAAM,OAAQkB,KAAKoJ,QAAQqD,UAAY,IAGlHsL,EAAW,CACfzO,EAAGpJ,EAAIF,KAAKoJ,QAAQa,aACpB6M,QAAS9W,KAAKoJ,QAAQmF,cACtB4I,QAASnX,KAAKoJ,QAAQmF,cAAgB,IAGlCyJ,EAAQ,CACZ,oBAAkD,EAA5BhY,KAAKoJ,QAAQa,aAAoB,EACvD,oBAAqB,EACrB,iBAA+C,EAA5BjK,KAAKoJ,QAAQa,aAAoB,EACpD,iBAAkB,EAClBsN,UAAWvX,KAAKoJ,QAAQa,aAAe,EACvC0N,UAAwC,GAA5B3X,KAAKoJ,QAAQa,aAAqB,EAC9CuN,WAAY,EACZI,WAAyC,EAA5B5X,KAAKoJ,QAAQa,aAAoB,EAC9CwN,YAAazX,KAAKoJ,QAAQa,aAAe,EACzC4N,YAA0C,GAA5B7X,KAAKoJ,QAAQa,aAAqB,EAChDyN,WAAY1X,KAAKoJ,QAAQa,aAAe,EACxC6N,WAAyC,GAA5B9X,KAAKoJ,QAAQa,aAAqB,GAGjD,MAAO,CACL+M,WAAYM,EAAU,GAAGtX,KAAKoJ,QAAQ4J,mBACtC+D,WAAYO,EAAU,GAAGtX,KAAKoJ,QAAQ4J,mBACtCkE,QAASa,EAASzO,EAAI0O,EAAM,GAAGhY,KAAKoJ,QAAQ4J,mBAC5CmE,QAASY,EAASZ,QAClBN,QAASkB,EAASzO,EAAI0O,EAAM,GAAGhY,KAAKoJ,QAAQ4J,mBAC5C8D,QAASiB,EAASjB,SAItB9B,YACEhV,KAAKiY,KAAOjY,KAAKiS,MAAM3S,KAAKqJ,IAC1B,MAAMiD,EAAM,IAAIpD,EAAIxI,KAAM2I,GAE1B,OADA3I,KAAKqV,OAAOzJ,IAAIhG,YAAYgG,EAAIxB,OACzBwB,KAIXqJ,cACEjV,KAAKoP,OAAS,GACd,IAAK,IAAIzG,KAAQ3I,KAAKiS,MAAO,CAC3B,IAAI7C,EAAS,GACbA,EAASzG,EAAKkE,aACXvN,KAAK4Y,IACJ,MAAMC,EAAanY,KAAKoY,SAASF,GACjC,IAAKC,EAAY,OACjB,MAAM9I,EAAQ,IAAIE,EAChBvP,KACAA,KAAKiY,KAAKE,EAAW1J,QACrBzO,KAAKiY,KAAKtP,EAAK8F,SAGjB,OADAzO,KAAKqV,OAAOhG,MAAMzJ,YAAYyJ,EAAM9H,SAC7B8H,KAERoE,OAAO4E,SACVrY,KAAKoP,OAASpP,KAAKoP,OAAOxP,OAAOwP,IAIrC8F,qBACE,IAAK,IAAItJ,KAAO5L,KAAKiY,KACnBrM,EAAIwD,OAASpP,KAAKoP,OAAOqE,QAAQpE,GACxBA,EAAMG,UAAU7G,KAAK4B,KAAOqB,EAAIjD,KAAK4B,IAAM8E,EAAMI,QAAQ9G,KAAK4B,KAAOqB,EAAIjD,KAAK4B,KAK3F4K,YACE,MAAMmD,EAAYtY,KAAKyS,KAAKlB,wBAAwBvH,MAC9CuO,EAAevY,KAAKyS,KAAKrN,cAAc,mBAAmBmD,aAAa,SACzE+P,EAAYC,GACdvY,KAAKyS,KAAK3M,aAAa,QAASyS,GAIpCnD,sBACE,MAAMoD,EAAiBxY,KAAKyS,KAAKG,cACjC,IAAK4F,EAAgB,OAErB,MAEMC,EAF0B7Z,EAAW+D,KAAK3C,KAAK0Y,2BAA4B1Y,KAAKmO,YAAa,QAErDnO,KAAKoJ,QAAQW,KAAQ/J,KAAKoJ,QAAQa,aAAejK,KAAKoJ,QAAQa,aAE5GuO,EAAeG,WAAaF,EAG9B/D,kBACE1P,EAAEsC,GAAGtH,KAAKyS,KAAMzS,KAAKoJ,QAAQ+C,cAAe,2BAA2B,KACrEnM,KAAKqM,eACLrM,KAAK4Y,gBAITjE,kBACE,IAAIkE,GAAc,EACdC,EAAa,EACbC,EAAa,EACbC,GAAmB,EACnBC,GAAoB,EACpBC,EAAgB,KAChBjB,EAAO,GACXjY,KAAKuM,kBAAoB,KAMzBvH,EAAEsC,GAAGtH,KAAKyS,KAAM,YAAa,yBAAyB,CAACzK,EAAGT,KACxD,MAAM4R,EAAcnU,EAAEmD,QAAQ,eAAgBZ,GAE1CA,EAAQiE,UAAU4N,SAAS,QAC7BJ,GAAmB,EACVzR,EAAQiE,UAAU4N,SAAS,SACpCH,GAAoB,EACX1R,EAAQiE,UAAU4N,SAAS,iBACpCP,GAAc,GAGhBM,EAAY3N,UAAU7H,IAAI,UAE1BmV,EAAa9Q,EAAEqR,QACfN,EAAa/Q,EAAEsR,QAEfJ,EAAgBC,EAAY5Q,aAAa,WACzC,MAAMgR,EAAM,CAACL,KAAkBlZ,KAAKwZ,wBAAwBN,IAC5DjB,EAAOsB,EAAIja,KAAKiL,GAAOvK,KAAK+M,QAAQxC,KAEpCvK,KAAKuM,kBAAoB2M,EAEzBjB,EAAK5V,SAASuJ,IACZ,MAAMP,EAAOO,EAAIP,KACjBA,EAAKoO,GAAKpO,EAAKT,OACfS,EAAKqO,GAAKrO,EAAKR,OACfQ,EAAKsO,OAAStO,EAAKP,WACnBO,EAAKuO,QAAU,QAInB5U,EAAEsC,GAAGtH,KAAKyS,KAAM,aAAczK,IAC5B,KAnCO6Q,GAAeG,GAAoBC,GAmCf,OAC3B,MAAMtK,EAAK3G,EAAEqR,QAAUP,EACZ9Q,EAAEsR,QAEbrB,EAAK5V,SAASuJ,IACZ,MAAMP,EAAOO,EAAIP,KACjBA,EAAKuO,QAAU5Z,KAAK0O,kBAAkBC,GACtC3O,KAAK4Y,aACDI,EACEE,IAAkBtN,EAAIjD,KAAK4B,GAC7BqB,EAAIgB,oBAAoB,CACtBtD,EAAG+B,EAAKoO,GAAKpO,EAAKuO,QAClB5P,MAAOqB,EAAKsO,OAAStO,EAAKuO,UAG5BhO,EAAIgB,oBAAoB,CACtBtD,EAAG+B,EAAKoO,GAAKpO,EAAKuO,UAGbX,EACLC,IAAkBtN,EAAIjD,KAAK4B,IAC7BqB,EAAIgB,oBAAoB,CACtB5C,MAAOqB,EAAKsO,OAAStO,EAAKuO,UAGrBf,GACTjN,EAAIgB,oBAAoB,CAAEtD,EAAG+B,EAAKoO,GAAKpO,EAAKuO,gBAKlDzU,SAAS4C,iBAAiB,WAAYC,KAChC6Q,GAAeG,GAAoBC,IACrChB,EAAK5V,SAASuJ,GAAQA,EAAIxB,MAAMoB,UAAU0D,OAAO,YAGnD2J,GAAc,EACdG,GAAmB,EACnBC,GAAoB,KAGtBjU,EAAEsC,GAAGtH,KAAKyS,KAAM,WAAYzK,IAC1BhI,KAAKuM,kBAAoB,KACzB0L,EAAK5V,SAASuJ,IACCA,EAAIP,KACPuO,UACVhO,EAAI2B,eACJ3B,EAAIoC,8BAIRhO,KAAK6Z,oBAGPA,oBACE,IAAIf,EAAa,EACbC,EAAa,EACbe,EAAc,KACdlO,EAAM,KACNH,EAAgB,KAChBJ,EAAO,KAEXrG,EAAEsC,GAAGtH,KAAKyS,KAAM,YAAa,oBAAoB,CAACzK,EAAGmH,KACnD2K,GAAc,EACdhB,EAAa9Q,EAAEqR,QACfN,EAAa/Q,EAAEsR,QAEf,MACM/O,EADevF,EAAEmD,QAAQ,eAAgBgH,GACvB5G,aAAa,WACrCqD,EAAM5L,KAAK+M,QAAQxC,GAEnBkB,EAAgBG,EAAIH,cACpBJ,EAAOO,EAAIP,KAEXI,EAAcmO,QAAU,EACxBnO,EAAckO,OAASlO,EAAcX,WACrCW,EAAcsO,QAAUtO,EAAcX,WACtCW,EAAcuO,OAAS3O,EAAKP,WAAaW,EAAcX,cAGzD9F,EAAEsC,GAAGtH,KAAKyS,KAAM,aAAczK,IAC5B,IAAK8R,EAAa,OAClB,IAAInL,EAAK3G,EAAEqR,QAAUP,EACZ9Q,EAAEsR,QAEP3K,EAAKlD,EAAcuO,SACrBrL,EAAKlD,EAAcuO,QAEjBrL,EAAKlD,EAAcsO,SACrBpL,EAAKlD,EAAcsO,QAGrB,MAAME,EAAUrO,EAAIC,iBACpB7G,EAAEU,KAAK+F,EAAe,QAASA,EAAckO,OAAShL,GACtD3J,EAAEU,KAAKuU,EAAS,SAAUrO,EAAIG,+BAC9BN,EAAcmO,QAAUjL,KAG1B3J,EAAEsC,GAAGtH,KAAKyS,KAAM,WAAW,KACzBqH,GAAc,EACRrO,GAAiBA,EAAcmO,UACrChO,EAAIiC,mBACJjC,EAAIoC,2BAIRwL,wBAAwBtB,GACtB,IAAIgC,EAAM,GACNC,EAAa,CAACjC,GAClB,KAAOiC,EAAWza,QAAQ,CACxB,MAAM6T,EAAO4G,EAAWnN,QAAO,CAACoN,EAAKlN,IACnCkN,EAAMA,EAAIxa,OAAOI,KAAK8T,eAAe5G,KAEpC,IAEHgN,EAAMA,EAAIta,OAAO2T,GACjB4G,EAAa5G,EAAKE,QAAQvS,IAAOiZ,EAAW5X,SAASrB,KAGvD,OAAOgZ,EAAIzG,OAAO4E,SAGpB3J,kBAAkBC,GAChB,IACEC,EACAC,EAFEC,EAAMH,EAcV,OAVI3O,KAAKsO,QAAQqD,EAAUG,OACzBlD,EAAMD,GAAM3O,KAAKoJ,QAAQa,aAAe,GACxC4E,EAAWC,EAAMF,GAAOA,EAAM5O,KAAKoJ,QAAQa,aAAe,GAAK,EAAIjK,KAAKoJ,QAAQa,aAAe,IACtFjK,KAAKsO,QAAQqD,EAAUrT,QAChCsQ,EAAMD,GAAM3O,KAAKoJ,QAAQa,aAAe,IACxC4E,EAAWC,EAAMF,GAAOA,EAAM5O,KAAKoJ,QAAQa,aAAe,GAAK,EAAIjK,KAAKoJ,QAAQa,aAAe,MAE/F2E,EAAMD,EAAK3O,KAAKoJ,QAAQa,aACxB4E,EAAWC,EAAMF,GAAOA,EAAM5O,KAAKoJ,QAAQa,aAAe,EAAI,EAAIjK,KAAKoJ,QAAQa,eAE1E4E,EAGTxC,eACG,IAAIrM,KAAKyS,KAAK4H,iBAAiB,iBAAiBhY,SAASiY,IACxDA,EAAG9O,UAAU0D,OAAO,aAIxBZ,QAAQiM,GACN,MAAqB,iBAAVA,EACFva,KAAKoJ,QAAQ4J,YAAcuH,IAGhCC,MAAMC,QAAQF,IACTA,EAAMG,MAAMzG,GAASjU,KAAKoJ,QAAQ4J,YAAciB,IAM3DmE,SAAS7N,GACP,OAAOvK,KAAKiS,MAAM0I,MAAMhS,GACfA,EAAK4B,KAAOA,IAIvBwC,QAAQxC,GACN,OAAOvK,KAAKiY,KAAK0C,MAAM/O,GACdA,EAAIjD,KAAK4B,KAAOA,IAI3B6B,WAAWhD,GACJpJ,KAAK4a,QACR5a,KAAK4a,MAAQ,IAAIlK,EAAM1Q,KAAK6S,cAAe7S,KAAKoJ,QAAQ8J,oBAE1DlT,KAAK4a,MAAM5J,KAAK5H,GAGlBwP,aACE5Y,KAAK4a,OAAS5a,KAAK4a,MAAM9J,OAG3BxE,cAAcxF,EAAO+T,GACf7a,KAAKoJ,QAAQ,MAAQtC,IACvB9G,KAAKoJ,QAAQ,MAAQtC,GAAOgU,MAAM,KAAMD,GAU5CnC,2BACE,OAAO1Y,KAAKiS,MAAM3S,KAAKqJ,GAASA,EAAKmB,SAAQkD,QAAO,CAAC+N,EAAWtG,IAAcA,GAAYsG,EAAYtG,EAAWsG,IAQnHnG,QACE5U,KAAKyS,KAAK5M,UAAY,WAI1BkM,EAAMJ,UAAYA"}